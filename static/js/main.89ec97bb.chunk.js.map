{"version":3,"sources":["actions/type.js","actions/role.js","api/axiosClient.js","api/storeApi.js","api/menuApi.js","actions/storecontrol.js","api/accountApi.js","actions/auth.js","components/UserMenu/index.jsx","components/Header/index.jsx","components/Footer/index.jsx","HOC/Layout/index.jsx","pages/Login/mains/LoginForm/index.jsx","assets/Take Away-pana.svg","pages/Login/index.jsx","pages/Register/mains/RegisterForm/index.jsx","pages/Register/index.jsx","components/ContentBlock/index.jsx","assets/Online Groceries-pana.svg","assets/Online Groceries-amico.svg","pages/LandingPage/index.jsx","assets/Discount-pana.svg","dataSources/TagStore/index.js","components/TagList/index.jsx","components/StoreCard/index.jsx","components/Loading/index.jsx","pages/Home/mains/HomeBody/index.jsx","hooks/usePagination.js","components/StoreCategorySelect/index.jsx","actions/store.js","pages/Home/index.jsx","pages/Store/mains/StoreProfile/index.jsx","pages/Store/components/StoreItem/index.jsx","pages/Store/components/StoreMenuItem/index.jsx","pages/Store/mains/StoreMenu/index.jsx","pages/Store/components/CartItem/index.jsx","pages/Store/components/StoreOrderCart/index.jsx","pages/Store/components/StoreOrderBody/index.jsx","pages/Store/mains/StoreOrder/index.jsx","pages/Store/index.jsx","hooks/useImageUpload.js","pages/UserProfile/index.jsx","api/employeeApi.js","actions/employee.js","pages/EmployeeWorkspace/mains/StoreWorkspace/index.jsx","pages/EmployeeWorkspace/mains/CreateStore/index.jsx","pages/EmployeeWorkspace/index.jsx","pages/StoreDashboard/mains/StoreDashboardInfo/index.jsx","hooks/useStoreTime.js","pages/StoreDashboard/mains/StoreDashboardOrder/index.jsx","dataSources/isActive/index.js","pages/StoreDashboard/components/ModuleUpdateItem/index.jsx","pages/StoreDashboard/components/Item/index.jsx","pages/StoreDashboard/components/ModuleUpdateMenu/index.jsx","pages/StoreDashboard/components/MenuItem/index.jsx","pages/StoreDashboard/mains/StoreDashboardMenus/index.jsx","pages/StoreDashboard/index.jsx","Config/routes.jsx","reducers/auth.js","reducers/storeview.js","reducers/storedata.js","reducers/storeid.js","reducers/role.js","reducers/employee.js","reducers/storecontrol.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["ACCOUNT_LOAD_PROFILE","ACCOUNT_LOAD_PROFILE_SUCCESS","ACCOUNT_LOGIN_SUCCESS","ACCOUNT_LOGIN_FAIL","ACCOUNT_LOGOUT","ACCOUNT_AUTHENTICATION_FAILED","ACCOUNT_AUTHENTICATION_SUCCESS","ACCOUNT_REGISTERED_FAILED","ACCOUNT_UPDATE_FAILED","ACCOUNT_UPDATE_SUCCESS","STORE_LOAD","STORE_LOAD_SUCCESS","STORE_LOAD_FAILED","STORE_VIEW_LOAD","STORE_VIEW_LOAD_SUCCESS","STORE_VIEW_LOAD_FAILED","STORE_ID_LOAD","STORE_ID_LOAD_SUCCESS","STORE_ID_LOAD_FAILED","STORE_ID_ADD_CART","STORE_ID_REMOVE_CART","ROLE_LOAD_EMPLOYEE","ROLE_LOAD_CUSTOMER","ROLE_CLEAR_ALL","EMPLOYEE_LOAD_PROFILE","EMPLOYEE_LOAD_PROFILE_FAILED","EMPLOYEE_LOAD_PROFILE_SUCCESS","EMPLOYEE_CREATE_STORE_FAILED","EMPLOYEE_CREATE_STORE_SUCCESS","STORE_CONTROL_LOAD_STORE","STORE_CONTROL_LOAD_STORE_SUCCESS","STORE_CONTROL_LOAD_STORE_FAILED","STORE_CONTROL_LOAD_MENU","STORE_CONTROL_LOAD_MENU_FAILED","STORE_CONTROL_LOAD_ORDER","STORE_CONTROL_LOAD_ORDER_SUCCESS","STORE_CONTROL_LOAD_ORDER_FAILED","STORE_CONTROL_UPDATE_STORE","STORE_CONTROL_UPDATE_STORE_SUCCESS","STORE_CONTROL_UPDATE_STORE_FAILED","STORE_CONTROLL_CLEAR_ALL","STORE_CONTROL_CREATE_MENU_FAILED","STORE_CONTROL_CREATE_MENU_SUCCESS","STORE_CONTROL_CREATE_MENU","STORE_CONTROL_UPDATE_MENU_FAILED","STORE_CONTROL_UPDATE_MENU_SUCCESS","STORE_CONTROL_UPDATE_ITEM_FAILED","STORE_CONTROL_UPDATE_ITEM_SUCCESS","loadRole","role","roleInfo","dispatch","type","payload","clearRole","axiosClient","axios","create","baseURL","process","headers","accept","paramsSerializer","params","queryString","stringify","arrayFormat","timeout","interceptors","request","use","a","config","authTokens","localStorage","getItem","JSON","parse","Authorization","access","response","data","error","storeApi","storeGetList","get","getStoreByID","storeId","url","updateStore","formData","put","menuApi","createMenu","post","updateMenu","id","updateItem","ClearStoreControl","StoreLoading","MenuLoading","accountApi","accountLogin","getSelf","accountRegister","accountUpdate","Logout","LoadUser","res","status","user","account_role","account_role_info","customerMenu","LogoutAction","className","Item","to","onClick","tabIndex","employeeMenu","UserMenu","isLoading","useState","show","setShow","userData","setUserData","useEffect","overlay","src","avatar","alt","first_name","defaultProps","mapDispatchToProps","connect","state","auth","isLoadingAccount","AccountLogin","Header","isAuth","loadUserAction","logout","visible","setVisible","activeClassName","exact","icon","BarsOutlined","title","placement","onClose","footer","itemLayout","isAuthenticated","Footer","target","href","rel","FacebookFilled","InstagramFilled","Layout","props","children","LoginForm","loginAction","email","password","form","setForm","history","useHistory","goBack","handleOnChange","e","name","value","direction","placeholder","onChange","Password","GoogleCircleFilled","Login","Svg4","RegisterForm","RegisterAction","repassword","Option","Select","push","labelInValue","defaultValue","style","width","respone","console","log","Register","ContentBlock","content","classNames","position","heading","paragraph","link","button","img","Infos","key","caption","Svg7","Svg8","LandingPage","autoplay","map","info","tagsValue","label","tags","storeCategories","slug","TagList","classname","classnames","color","StoreCard","storeImage","storeAltImage","storeName","storeAddress","storeCategory","Loading","isError","action","tip","image","Empty","PRESENTED_IMAGE_SIMPLE","HomeBody","storeViewList","current","itemsPerPage","currentPage","setCurrentPage","beginItem","endItem","pageSize","page","usePagination","totalItem","length","slice","store","address","logo","store_category","defaultPageSize","defaultCurrent","total","storeview","storeList","tagRender","closable","onMouseDown","event","preventDefault","stopPropagation","marginRight","StoreCategorySelect","allowClear","mode","showArrow","item","AddCart","Home","storeData","loadStoreData","showStore","category","setCategory","showStoreByCategory","filter","includes","newCategoryList","find","listStore","setTimeout","storedata","storeDataList","StoreProfile","text","InfoCircleFilled","description","allowHalf","DollarOutlined","MailFilled","PhoneFilled","phone","storeid","StoreItem","storeItem","addCart","price","PlusOutlined","size","StoreMenuItem","menuItem","items","StoreMenu","menu","hasItem","setHasItem","setIsLoading","removeCart","cartItem","amount","MinusOutlined","StoreOrderCart","cart","StoreOrderBody","ShoppingCartOutlined","StoreOrder","Store","getStore","useParams","useImageUpload","selectedFile","setSelectedFile","isUploaded","setUploaded","preview","setPreview","objectUrl","URL","createObjectURL","revokeObjectURL","undefined","onSelectFile","files","UserProfile","updateAccount","setPhone","firstName","setFirstName","last_name","lastName","setLastName","hidden","htmlFor","UploadOutlined","FormData","append","employeeApi","createStore","LoadingEmployee","LoadEmployee","StoreWorkspace","employee","employeeStore","CollectionCreateForm","onCreate","onCancel","Form","useForm","okText","cancelText","onOk","validateFields","then","values","resetFields","catch","rules","required","message","isModalVisible","setIsModalVisible","EmployeeWorkspace","loadEmployee","employeeInfo","formRef","useRef","formControl","setFieldsValue","layout","initialValues","ref","TextArea","StoreDashboardInfo","loadStore","updateForm","setUpdateForm","openTime","closeTime","open","setOpen","close","setClose","storeState","setStoreState","now","moment","isAfter","isBefore","updateOpen","updateClose","useStoreTime","open_time","closeTIme","close_time","newForm","EditOutlined","bordered","span","intialForm","format","HTML5_FMT","TIME_SECONDS","storecontrol","isLoadingStore","storeInfo","StoreDashboardOrder","isActive","ModuleUpdateItem","option","valuePropName","getValueFromEvent","customRequest","onSuccess","listType","fileList","is_active","initialData","setInitialData","EditFilled","createForm","file","originFileObj","entries","next","done","ModuleUpdateMenu","menuItems","Ribbon","List","fields","add","remove","fieldKey","restField","display","marginBottom","align","MinusCircleOutlined","block","StoreDashboardMenus","menus","isLoadingMenus","storeMenus","StoreDashboard","defaultActiveKey","TabPane","tab","routes","path","component","initialState","actionType","setItem","newUser","removeItem","stores","newCart","newItem","containItem","some","cartItemAmount","reduceCart","cardItem","customer","isLoadingOrder","storeOrder","orders","newMenu","newStoreMenu","newMenuItems","combineReducers","middleware","thunk","rootReducer","composeWithDevTools","applyMiddleware","App","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89ec97bb.chunk.js","sourcesContent":["export const ACCOUNT_LOAD_PROFILE = 'account/load_profile';\r\nexport const ACCOUNT_LOAD_PROFILE_SUCCESS =\r\n  'account/load_profile_success';\r\nexport const ACCOUNT_LOAD_PROFILE_FAILED =\r\n  'account/load_profile_failed';\r\nexport const ACCOUNT_LOGIN_SUCCESS = 'account/login_success';\r\nexport const ACCOUNT_LOGIN_FAIL = 'account/login_fail';\r\nexport const ACCOUNT_LOGOUT = 'account/logout';\r\nexport const ACCOUNT_AUTHENTICATION_FAILED =\r\n  'account/authentication_fail';\r\nexport const ACCOUNT_AUTHENTICATION_SUCCESS =\r\n  'account/authentication_succes';\r\nexport const ACCOUNT_REGISTERED_FAILED = 'account/register_fail';\r\nexport const ACCOUNT_REGISTERED_SUCCESS = 'account/register_success';\r\nexport const ACCOUNT_UPDATE_FAILED =\r\n  'account_update/account_update_fail';\r\nexport const ACCOUNT_UPDATE_SUCCESS =\r\n  'account_update/account_update_success';\r\n\r\n// store_home\r\nexport const STORE_LOAD = 'store/load';\r\nexport const STORE_LOAD_SUCCESS = 'store/load_success';\r\nexport const STORE_LOAD_FAILED = 'store/load_fail';\r\n\r\n// store_view_by_category\r\nexport const STORE_VIEW_LOAD = 'store_view/load_store';\r\nexport const STORE_VIEW_LOAD_SUCCESS =\r\n  'store_view/load_store_success';\r\nexport const STORE_VIEW_LOAD_FAILED = 'store_view/load_store_fail';\r\n\r\n// home store\r\nexport const STORE_ID_LOAD = 'store_id/load_store';\r\nexport const STORE_ID_LOAD_SUCCESS = 'store_id/load_store_success';\r\nexport const STORE_ID_LOAD_FAILED = 'store_id/load_store_fail';\r\nexport const STORE_ID_ADD_CART = 'store_id/add_cart';\r\nexport const STORE_ID_REMOVE_CART = 'store_id/remove_cart';\r\n\r\n// role\r\nexport const ROLE_LOAD_EMPLOYEE = 'role/load_employee';\r\nexport const ROLE_LOAD_CUSTOMER = 'role/load_customer';\r\nexport const ROLE_CLEAR_ALL = 'role/clear_all';\r\n\r\n// employee\r\nexport const EMPLOYEE_LOAD_PROFILE = 'role_emplyee/load_profile';\r\nexport const EMPLOYEE_LOAD_PROFILE_FAILED =\r\n  'role_emplyee/load_profile_fail';\r\nexport const EMPLOYEE_LOAD_PROFILE_SUCCESS =\r\n  'role_emplyee/load_profile_success';\r\nexport const EMPLOYEE_CREATE_STORE_FAILED =\r\n  'role_emplyee/create_store_fail';\r\nexport const EMPLOYEE_CREATE_STORE_SUCCESS =\r\n  'role_employee/creat_store_success';\r\n\r\n// store control\r\nexport const STORE_CONTROL_LOAD_STORE = 'store_control/load_store';\r\nexport const STORE_CONTROL_LOAD_STORE_SUCCESS =\r\n  'store_control/load_store_success';\r\nexport const STORE_CONTROL_LOAD_STORE_FAILED =\r\n  'store_control/load_store_fail';\r\nexport const STORE_CONTROL_LOAD_MENU = 'store_control/load_menu';\r\nexport const STORE_CONTROL_LOAD_MENU_SUCCESS =\r\n  'store_control/load_menu_success';\r\nexport const STORE_CONTROL_LOAD_MENU_FAILED =\r\n  'store_control/load_menu_fail';\r\nexport const STORE_CONTROL_LOAD_ORDER = 'store_control/load_order';\r\nexport const STORE_CONTROL_LOAD_ORDER_SUCCESS =\r\n  'store_control/load_order_success';\r\nexport const STORE_CONTROL_LOAD_ORDER_FAILED =\r\n  'store_control/load_order_fail';\r\nexport const STORE_CONTROL_UPDATE_STORE =\r\n  'store_control/update_store';\r\nexport const STORE_CONTROL_UPDATE_STORE_SUCCESS =\r\n  'store_control/update_store_success';\r\nexport const STORE_CONTROL_UPDATE_STORE_FAILED =\r\n  'store_control/update_store_fail';\r\nexport const STORE_CONTROLL_CLEAR_ALL = 'store_control/clear_all';\r\nexport const STORE_CONTROL_CREATE_MENU_FAILED =\r\n  'store_control/create_menu_fail';\r\nexport const STORE_CONTROL_CREATE_MENU_SUCCESS =\r\n  'store_control/create_menu_success';\r\nexport const STORE_CONTROL_CREATE_MENU = 'store_control/create_menu';\r\nexport const STORE_CONTROL_UPDATE_MENU_FAILED =\r\n  'store_control/update_menu_fail';\r\nexport const STORE_CONTROL_UPDATE_MENU_SUCCESS =\r\n  'store_control/update_menu_success';\r\nexport const STORE_CONTROL_UPDATE_MENU = 'store_control/update_menu';\r\n\r\n// store_control_item\r\nexport const STORE_CONTROL_UPDATE_ITEM_FAILED =\r\n  'store_control/update_item_fail';\r\nexport const STORE_CONTROL_UPDATE_ITEM_SUCCESS =\r\n  'store_control/update_item_success';\r\nexport const STORE_CONTROL_UPDATE_ITEM = 'store_control/update_item';\r\n","import * as type from './type';\r\n\r\nexport const loadRole = (role, roleInfo) => (dispatch) => {\r\n  const typeDispatch =\r\n    role === 'customer'\r\n      ? type.ROLE_LOAD_CUSTOMER\r\n      : type.ROLE_LOAD_EMPLOYEE;\r\n  return dispatch({\r\n    type: typeDispatch,\r\n    payload: roleInfo,\r\n  });\r\n};\r\n\r\nexport const clearRole = (dispatch) =>\r\n  dispatch({ type: type.ROLE_CLEAR_ALL });\r\n","// libs\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nconst getAuthToken = () => {\r\n  const tokenStogare = localStorage.getItem('authTokens')\r\n    ? JSON.parse(localStorage.getItem('authTokens'))\r\n    : null;\r\n\r\n  return tokenStogare;\r\n};\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    'content-type': 'application/json',\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n    accept: 'application/json',\r\n  },\r\n  paramsSerializer: (params) =>\r\n    queryString.stringify(params, { arrayFormat: 'brackets' }),\r\n  timeout: 5000,\r\n});\r\n\r\n// Handle token inside\r\naxiosClient.interceptors.request.use(async (config) => {\r\n  const authTokens = getAuthToken();\r\n  if (authTokens) {\r\n    // eslint-disable-next-line no-param-reassign\r\n    config.headers.Authorization = `Bearer ${authTokens?.access}`;\r\n  }\r\n  return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use(\r\n  (response) => {\r\n    if (response && response.data) {\r\n      return response.data;\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    throw error;\r\n  },\r\n);\r\n\r\nexport default axiosClient;\r\n","import axiosClient from './axiosClient';\r\n\r\nconst storeApi = {\r\n  storeGetList: () => {\r\n    const url = '/store';\r\n    return axiosClient.get(url);\r\n  },\r\n  getStoreByID: (storeId) => {\r\n    const url = `/store/${storeId}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  updateStore: (formData, storeId) => {\r\n    const url = `/store/${storeId}`;\r\n    return axiosClient.put(url, formData);\r\n  },\r\n};\r\n\r\nexport default storeApi;\r\n","import axiosClient from './axiosClient';\r\n\r\nconst menuApi = {\r\n  createMenu: (params) => {\r\n    const url = '/menu';\r\n    return axiosClient.post(url, params);\r\n  },\r\n  updateMenu: (params, id) => {\r\n    const url = `/menu/${id}`;\r\n    return axiosClient.put(url, params);\r\n  },\r\n  updateItem: (params, id) => {\r\n    const url = `/item/${id}`;\r\n    return axiosClient.put(url, params);\r\n  },\r\n};\r\n\r\nexport default menuApi;\r\n","import * as type from './type';\r\nimport storeApi from '../api/storeApi';\r\nimport menuApi from '../api/menuApi';\r\n\r\nexport const ClearStoreControl = (dispatch) =>\r\n  dispatch({\r\n    type: type.STORE_CONTROLL_CLEAR_ALL,\r\n  });\r\n\r\nexport const StoreLoading = () => async (dispatch) =>\r\n  dispatch({\r\n    type: type.STORE_CONTROL_LOAD_STORE,\r\n  });\r\nexport const MenuLoading = () => async (dispatch) =>\r\n  dispatch({\r\n    type: type.STORE_CONTROL_LOAD_MENU,\r\n  });\r\n\r\nexport const LoadStore = (id) => async (dispatch) => {\r\n  dispatch(StoreLoading);\r\n  try {\r\n    const res = await storeApi.getStoreByID(id);\r\n    if (res.status === 'Error') {\r\n      dispatch({\r\n        type: type.STORE_CONTROL_LOAD_STORE_FAILED,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: type.STORE_CONTROL_LOAD_STORE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: type.STORE_CONTROL_LOAD_STORE_FAILED,\r\n    });\r\n  }\r\n};\r\n\r\nexport const UpdateStore =\r\n  (formData, storeid) => async (dispatch) => {\r\n    try {\r\n      const res = await storeApi.updateStore(formData, storeid);\r\n      if (res.status === 'Error') {\r\n        dispatch({ type: type.STORE_CONTROL_UPDATE_STORE_FAILED });\r\n      } else {\r\n        dispatch({\r\n          type: type.STORE_CONTROL_UPDATE_STORE_SUCCESS,\r\n          payload: res.data,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({ type: type.STORE_CONTROL_UPDATE_STORE_FAILED });\r\n    }\r\n  };\r\n\r\nexport const CreateMenu = (formData) => async (dispatch) => {\r\n  dispatch(MenuLoading);\r\n  try {\r\n    const res = await menuApi.createMenu(formData);\r\n    if (res.status === 'Error') {\r\n      dispatch({ type: type.STORE_CONTROL_CREATE_MENU_FAILED });\r\n    } else {\r\n      dispatch({\r\n        type: type.STORE_CONTROL_CREATE_MENU_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({ type: type.STORE_CONTROL_CREATE_MENU_FAILED });\r\n  }\r\n};\r\n\r\nexport const UpdateMenu = (formData, id) => async (dispatch) => {\r\n  dispatch(MenuLoading);\r\n  try {\r\n    const res = await menuApi.updateMenu(formData, id);\r\n    if (res.status === 'Error') {\r\n      dispatch({ type: type.STORE_CONTROL_UPDATE_MENU_FAILED });\r\n    } else {\r\n      dispatch({\r\n        type: type.STORE_CONTROL_UPDATE_MENU_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({ type: type.STORE_CONTROL_UPDATE_MENU_FAILED });\r\n  }\r\n};\r\n\r\nexport const UpdateItem = (formData, id) => async (dispatch) => {\r\n  dispatch(MenuLoading);\r\n  try {\r\n    const res = await menuApi.updateItem(formData, id);\r\n    if (res.status === 'Error') {\r\n      dispatch({ type: type.STORE_CONTROL_UPDATE_ITEM_FAILED });\r\n    } else {\r\n      dispatch({\r\n        type: type.STORE_CONTROL_UPDATE_ITEM_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({ type: type.STORE_CONTROL_UPDATE_ITEM_FAILED });\r\n  }\r\n};\r\n","import axiosClient from './axiosClient';\r\n\r\nconst accountApi = {\r\n  accountLogin: (params) => {\r\n    const url = '/account/login';\r\n    return axiosClient.post(url, params);\r\n  },\r\n  getSelf: () => {\r\n    const url = '/account/';\r\n    return axiosClient.get(url);\r\n  },\r\n  accountRegister: (params) => {\r\n    const url = '/account/register';\r\n    return axiosClient.post(url, params);\r\n  },\r\n  accountUpdate: (params, id) => {\r\n    const url = `/account/${id}`;\r\n    return axiosClient.put(url, params);\r\n  },\r\n};\r\nexport default accountApi;\r\n","import * as type from './type';\r\nimport { loadRole, clearRole } from './role';\r\nimport { ClearStoreControl } from './storecontrol';\r\nimport accountApi from '../api/accountApi';\r\n\r\nexport const Logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: type.ACCOUNT_LOGOUT,\r\n  });\r\n  dispatch(clearRole);\r\n  dispatch(ClearStoreControl);\r\n};\r\n\r\nexport const LoadUser = () => async (dispatch) => {\r\n  try {\r\n    const res = await accountApi.getSelf();\r\n    if (res.status === 'Error') {\r\n      dispatch({ type: type.ACCOUNT_LOAD_PROFILE_FAILED });\r\n    } else {\r\n      dispatch({\r\n        type: type.ACCOUNT_AUTHENTICATION_SUCCESS,\r\n      });\r\n      dispatch({\r\n        type: type.ACCOUNT_LOAD_PROFILE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      dispatch(\r\n        loadRole(\r\n          res.data.user.account_role,\r\n          res.data.user.account_role_info,\r\n        ),\r\n      );\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: type.ACCOUNT_AUTHENTICATION_FAILED });\r\n  }\r\n};\r\n\r\nexport const Login = (params) => async (dispatch) => {\r\n  try {\r\n    const res = await accountApi.accountLogin(params);\r\n    if (res.status === 'Error') {\r\n      dispatch({\r\n        type: type.ACCOUNT_LOGIN_FAIL,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: type.ACCOUNT_LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      dispatch(LoadUser());\r\n    }\r\n  } catch (error) {\r\n    dispatch({\r\n      type: type.ACCOUNT_LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const Register = (formData) => async (dispatch) => {\r\n  try {\r\n    const res = await accountApi.accountRegister(formData);\r\n    if (res.status === 'Error') {\r\n      dispatch({\r\n        type: type.ACCOUNT_REGISTERED_FAILED,\r\n      });\r\n    } else {\r\n      dispatch({ type: type.ACCOUNT_REGISTERED_SUCCESS });\r\n    }\r\n  } catch (error) {\r\n    if (error.response) {\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      dispatch({\r\n        type: type.ACCOUNT_REGISTERED_FAILED,\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const UpdateAccount = (formData, id) => async (dispatch) => {\r\n  try {\r\n    const res = await accountApi.accountUpdate(formData, id);\r\n    if (res.status === 'Error') {\r\n      dispatch({\r\n        type: type.ACCOUNT_UPDATE_FAILED,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: type.ACCOUNT_UPDATE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    if (error.response) {\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      dispatch({\r\n        type: type.ACCOUNT_UPDATE_FAILED,\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu, Dropdown } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { Logout } from '../../actions/auth';\r\n\r\nconst customerMenu = (LogoutAction) => {\r\n  const handleLogout = () => {\r\n    LogoutAction();\r\n  };\r\n  return (\r\n    <Menu className=\"customer-dropdown-menu\">\r\n      <Menu.Item key=\"1\">\r\n        <Link to=\"/user/history\">\r\n          <div className=\"dropdown-item\">Lịch sử đơn hàng</div>\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"2\">\r\n        <Link to=\"/account/profile\">\r\n          <div className=\"dropdown-item\">Thông tin cá nhân</div>\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"3\">\r\n        <div\r\n          className=\"dropdown-item\"\r\n          onClick={handleLogout}\r\n          role=\"menuitem\"\r\n          tabIndex=\"-1\"\r\n        >\r\n          Đăng xuất\r\n        </div>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst employeeMenu = (LogoutAction) => {\r\n  const handleLogout = () => {\r\n    LogoutAction();\r\n  };\r\n  return (\r\n    <Menu className=\"customer-dropdown-menu\">\r\n      <Menu.Item key=\"1\">\r\n        <Link to=\"/employee\">\r\n          <div className=\"dropdown-item\">Quản lý cửa hàng</div>\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"2\">\r\n        <Link to=\"/account/profile\">\r\n          <div className=\"dropdown-item\">Thông tin cá nhân</div>\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"3\">\r\n        <div\r\n          className=\"dropdown-item\"\r\n          onClick={handleLogout}\r\n          role=\"menuitem\"\r\n          tabIndex=\"-1\"\r\n        >\r\n          Đăng xuất\r\n        </div>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\n// const UserMenu = ({ logout, user, isLoading }) => {\r\nconst UserMenu = ({ LogoutAction, user, isLoading }) => {\r\n  const [show, setShow] = useState(null);\r\n  const handleShow = () => {\r\n    setShow(!show);\r\n  };\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setUserData(user);\r\n  }, [user]);\r\n  if (isLoading || userData === null) {\r\n    return <> </>;\r\n  }\r\n  return (\r\n    <div className=\"user-account\">\r\n      <div\r\n        className=\"dropdown\"\r\n        onClick={handleShow}\r\n        role=\"menuitem\"\r\n        tabIndex=\"-1\"\r\n      >\r\n        <Dropdown\r\n          className=\"account-dropdown-menu\"\r\n          overlay={\r\n            user.account_role === 'customer'\r\n              ? customerMenu(LogoutAction)\r\n              : employeeMenu(LogoutAction)\r\n          }\r\n        >\r\n          <div className=\"dropdown-toggle\" id=\"user-dropdown\">\r\n            <div className=\"image\">\r\n              <img\r\n                src={`${process.env.REACT_APP_URL + userData.avatar}`}\r\n                alt=\"avatar\"\r\n              />\r\n            </div>\r\n            <span className=\"name\">{userData?.first_name}</span>\r\n          </div>\r\n        </Dropdown>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserMenu.propTypes = {\r\n  LogoutAction: PropTypes.func.isRequired,\r\n  user: PropTypes.shape({\r\n    first_name: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    account_role: PropTypes.string,\r\n  }),\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nUserMenu.defaultProps = {\r\n  user: {\r\n    avatar: null,\r\n    first_name: 'anonymous',\r\n  },\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  LogoutAction: Logout,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  isLoading: state.auth.isLoadingAccount,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","// libs\r\nimport React, { useEffect, useState } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Drawer, Button, List } from 'antd';\r\nimport { BarsOutlined } from '@ant-design/icons';\r\n// redux thunk\r\nimport { LoadUser, Logout } from '../../actions/auth';\r\n// components\r\nimport UserMenu from '../UserMenu';\r\n\r\nconst AccountLogin = () => (\r\n  <Link to=\"/account/login\" className=\"btn btn-primary\">\r\n    Đăng nhập\r\n  </Link>\r\n);\r\n\r\nconst Header = ({ isAuth, loadUserAction, logout, user }) => {\r\n  useEffect(() => {\r\n    loadUserAction();\r\n  }, []);\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"header-main\">\r\n          <Link className=\"header-logo\" to=\"/\">\r\n            Unimi\r\n          </Link>\r\n          <div className=\"header-menu\">\r\n            <NavLink\r\n              className=\"menu-link\"\r\n              activeClassName=\"active\"\r\n              to=\"/\"\r\n              exact\r\n            >\r\n              Trang chủ\r\n            </NavLink>\r\n            <NavLink className=\"menu-link\" to=\"/about\">\r\n              About\r\n            </NavLink>\r\n            <div className=\"menu-auth\">\r\n              {isAuth ? <UserMenu /> : <AccountLogin />}\r\n            </div>\r\n          </div>\r\n          <div className=\"header-drawer-menu\">\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={showDrawer}\r\n              icon={<BarsOutlined />}\r\n              className=\"header-drawer-button\"\r\n            />\r\n            <Drawer\r\n              title=\"Menu\"\r\n              placement=\"right\"\r\n              onClose={onClose}\r\n              visible={visible}\r\n              className=\"header-drawer\"\r\n              footer={\r\n                isAuth ? (\r\n                  <Button\r\n                    onClick={logout}\r\n                    className=\"drawer-logout-btn\"\r\n                  >\r\n                    Logout\r\n                  </Button>\r\n                ) : (\r\n                  <AccountLogin />\r\n                )\r\n              }\r\n            >\r\n              <List\r\n                itemLayout=\"horizontal\"\r\n                className=\"drawer-list-menu\"\r\n              >\r\n                {isAuth && (\r\n                  <List.Item>\r\n                    <UserMenu />\r\n                  </List.Item>\r\n                )}\r\n                <List.Item>\r\n                  <NavLink\r\n                    className=\"menu-link\"\r\n                    activeClassName=\"active\"\r\n                    to=\"/\"\r\n                    exact\r\n                  >\r\n                    Trang chủ\r\n                  </NavLink>\r\n                </List.Item>\r\n                <List.Item>\r\n                  <NavLink className=\"menu-link\" to=\"/about\">\r\n                    About\r\n                  </NavLink>\r\n                </List.Item>\r\n                {user.account_role === 'customer' && (\r\n                  <List.Item>\r\n                    <NavLink\r\n                      className=\"menu-link\"\r\n                      to=\"/customer/history\"\r\n                    >\r\n                      Lịch sử đơn hàng\r\n                    </NavLink>\r\n                  </List.Item>\r\n                )}\r\n                {user.account_role === 'employee' && (\r\n                  <List.Item>\r\n                    <NavLink className=\"menu-link\" to=\"/employee\">\r\n                      Quản lý cửa hàng\r\n                    </NavLink>\r\n                  </List.Item>\r\n                )}\r\n                {isAuth && (\r\n                  <List.Item>\r\n                    <NavLink\r\n                      className=\"menu-link\"\r\n                      to=\"/account/profile\"\r\n                    >\r\n                      Thông tin cá nhân\r\n                    </NavLink>\r\n                  </List.Item>\r\n                )}\r\n              </List>\r\n            </Drawer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  isAuth: PropTypes.bool,\r\n  loadUserAction: PropTypes.func.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n  user: PropTypes.shape({\r\n    account_role: PropTypes.string,\r\n  }),\r\n};\r\nHeader.defaultProps = {\r\n  isAuth: null,\r\n  user: null,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loadUserAction: LoadUser,\r\n  logout: Logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","// libs\r\nimport React from 'react';\r\nimport { FacebookFilled, InstagramFilled } from '@ant-design/icons';\r\n\r\nconst Footer = () => (\r\n  <div className=\"footer\">\r\n    <div className=\"container\">\r\n      <div className=\"footer-main\">\r\n        <div className=\"footer-company\">\r\n          <h3 className=\"footer-section-heading\">Công ty</h3>\r\n          <ul className=\"footer-company-list\">\r\n            <li className=\"footer-company-item\">Giới thiệu</li>\r\n            <li className=\"footer-company-item\">\r\n              Trung tâm trợ giúp\r\n            </li>\r\n            <li className=\"footer-company-item\">Quy chế</li>\r\n            <li className=\"footer-company-item\">\r\n              Điều khoản sử dụng\r\n            </li>\r\n            <li className=\"footer-company-item\">Bảo mật thông tin</li>\r\n            <li className=\"footer-company-item\">\r\n              Giải quyết khiếu nại\r\n            </li>\r\n            <li className=\"footer-company-item\">Liên hệ</li>\r\n            <li className=\"footer-company-item\">\r\n              Hợp tác nhân viên giao nhận\r\n            </li>\r\n            <li className=\"footer-company-item\">Đăng ký cửa hàng</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"footer-application\">\r\n          <h3 className=\"footer-section-heading\">\r\n            Ứng dụng UnimiFood\r\n          </h3>\r\n          <ul className=\"footer-application-list\">\r\n            <li className=\"footer-application-item\">Giới thiệu</li>\r\n            <li className=\"footer-application-item\">\r\n              Trung tâm trợ giúp\r\n            </li>\r\n            <li className=\"footer-application-item\">Quy chế</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"footer-more\">\r\n          <h3 className=\"footer-more-logo\">UNIMI FOOD</h3>\r\n          <span className=\"footer-more-certificate\">\r\n            © 2021 UNIMI Food\r\n          </span>\r\n          <ul className=\"footer-more-social\">\r\n            <li>\r\n              <a\r\n                title=\"Facebook\"\r\n                target=\"_blank\"\r\n                href=\"https://www.facebook.com/\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <span className=\"social-icon facebook-icon\">\r\n                  <FacebookFilled />\r\n                </span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a\r\n                title=\"Instagram\"\r\n                target=\"_blank\"\r\n                href=\"https://www.instagram.com/\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <span className=\"social-icon instagram-icon\">\r\n                  <InstagramFilled />\r\n                </span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"footer-location\">\r\n          <h3 className=\"footer-section-heading\"> Địa chỉ công ty</h3>\r\n          <span className=\"footer-location-line\">\r\n            <p> Công Ty cổ phần Unimi</p>\r\n            <p> Lầu 8, Tòa nhà E</p>\r\n            <p> khu phố 6, Thủ Đức, Thành phố Hồ Chí Minh</p>\r\n            <p> Giấy CN ĐKDN số: 03564255489</p>\r\n            <p>do Sở Kế hoạch và Đầu tư TP.HCM cấp ngày 11/6/2021,</p>\r\n            <p> sửa đổi lần thứ 2, ngày 21/10/2021</p>\r\n            <p> Số điện thoại: 1900 2042</p>\r\n            <p>\r\n              Email\r\n              <a href=\"mailto:info@unimifood.vn\">info@unimifood.vn</a>\r\n            </p>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\n\r\nconst Layout = ({ ...props }) => (\r\n  <>\r\n    <Header />\r\n    <div className=\"main-wrapper\">{props.children}</div>\r\n    <Footer />\r\n  </>\r\n);\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n","// libs\r\nimport React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Checkbox, Space, Button, Divider } from 'antd';\r\nimport {\r\n  FacebookFilled,\r\n  GoogleCircleFilled,\r\n} from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n// redux\r\nimport { Login } from '../../../../actions/auth';\r\n\r\nconst LoginForm = ({ loginAction, isAuth }) => {\r\n  const [form, setForm] = useState({\r\n    email: null,\r\n    password: null,\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (isAuth) history.goBack();\r\n  }, [isAuth]);\r\n\r\n  const handleOnChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleOnSubmit = () => {\r\n    loginAction(form);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form-wrapper\">\r\n      <Space\r\n        direction=\"vertical\"\r\n        className=\"login-form-wrapper-inner\"\r\n      >\r\n        <h3 className=\"login-form-title\">Đăng nhập </h3>\r\n        <Input\r\n          className=\"login-form-input\"\r\n          placeholder=\"Email / tên đăng nhập\"\r\n          name=\"email\"\r\n          onChange={handleOnChange}\r\n        />\r\n        <Input.Password\r\n          className=\"login-form-input\"\r\n          placeholder=\"Mật khẩu\"\r\n          name=\"password\"\r\n          onChange={handleOnChange}\r\n        />\r\n        <div className=\"login-form-functional\">\r\n          <Checkbox>Nhớ Tôi</Checkbox>\r\n          <Link className=\"login-form-forgot\" to=\"/account/forgot\">\r\n            Quên mật khẩu\r\n          </Link>\r\n        </div>\r\n        <Button\r\n          className=\"login-form-submit\"\r\n          onClick={handleOnSubmit}\r\n        >\r\n          Đăng nhập\r\n        </Button>\r\n        <Divider className=\"login-form-divider\">HOẶC</Divider>\r\n        <div className=\"login-form-functional\">\r\n          <Button\r\n            className=\"login-form-facebook\"\r\n            icon={<FacebookFilled />}\r\n          >\r\n            Facebook\r\n          </Button>\r\n          <Button\r\n            className=\"login-form-google\"\r\n            icon={<GoogleCircleFilled />}\r\n          >\r\n            Google\r\n          </Button>\r\n        </div>\r\n        <div className=\"login-form-register\">\r\n          <span> Bạn mới đến Unimi? </span>\r\n          <span>\r\n            <Link\r\n              to=\"/account/register\"\r\n              className=\"form-change-label\"\r\n            >\r\n              Đăng ký\r\n            </Link>\r\n          </span>\r\n        </div>\r\n      </Space>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  loginAction: PropTypes.func.isRequired,\r\n  isAuth: PropTypes.bool,\r\n};\r\n\r\nLoginForm.defaultProps = { isAuth: null };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loginAction: Login,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(LoginForm);\r\n","export default __webpack_public_path__ + \"static/media/Take Away-pana.ba91746e.svg\";","// libs\r\nimport React from 'react';\r\n// components\r\nimport LoginForm from './mains/LoginForm';\r\n// other\r\nimport Svg4 from '../../assets/Take Away-pana.svg';\r\n\r\nconst Login = () => (\r\n  <div className=\"login-wrapper\">\r\n    <div className=\"login-wrapper-inner container\">\r\n      <div className=\"login-image-wrapper\">\r\n        <img src={Svg4} alt=\"\" className=\"login-image\" />\r\n      </div>\r\n      <LoginForm />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Login;\r\n","// libs\r\nimport React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Input,\r\n  Checkbox,\r\n  Space,\r\n  Button,\r\n  Divider,\r\n  Select,\r\n} from 'antd';\r\nimport {\r\n  FacebookFilled,\r\n  GoogleCircleFilled,\r\n} from '@ant-design/icons';\r\n// redux\r\nimport { Register } from '../../../../actions/auth';\r\n\r\nconst RegisterForm = ({ RegisterAction, isAuth }) => {\r\n  const [form, setForm] = useState({\r\n    email: null,\r\n    password: null,\r\n    repassword: null,\r\n    account_role: 'customer',\r\n  });\r\n  const { Option } = Select;\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (isAuth) history.push('/');\r\n  }, [isAuth]);\r\n\r\n  const handleOnSubmit = () => {\r\n    const { repassword, ...params } = form;\r\n    if (params.password === repassword) {\r\n      RegisterAction(params);\r\n    }\r\n  };\r\n  const handleOnChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleOnChangeRole = (respone) => {\r\n    setForm({\r\n      ...form,\r\n      account_role: respone.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form-wrapper\">\r\n      <Space\r\n        direction=\"vertical\"\r\n        className=\"login-form-wrapper-inner\"\r\n      >\r\n        <div className=\"login-form-heading\">\r\n          <h3 className=\"login-form-title\">Đăng ký </h3>\r\n          <Select\r\n            className=\"login-form-select \"\r\n            labelInValue\r\n            defaultValue={{ value: 'customer' }}\r\n            style={{ width: 120 }}\r\n            onChange={handleOnChangeRole}\r\n          >\r\n            <Option value=\"customer\">Customer</Option>\r\n            <Option value=\"employee\">Store</Option>\r\n            <Option value=\"shipper\"> Shipper</Option>\r\n          </Select>\r\n        </div>\r\n        <Input\r\n          className=\"login-form-input\"\r\n          placeholder=\"Email / tên đăng nhập\"\r\n          name=\"email\"\r\n          onChange={handleOnChange}\r\n        />\r\n        <Input.Password\r\n          className=\"login-form-input\"\r\n          placeholder=\"Mật khẩu\"\r\n          name=\"password\"\r\n          onChange={handleOnChange}\r\n        />\r\n        <Input.Password\r\n          className=\"login-form-input\"\r\n          placeholder=\"Nhập mật khẩu\"\r\n          name=\"repassword\"\r\n          onChange={handleOnChange}\r\n        />\r\n        <div className=\"login-form-functional\">\r\n          <Checkbox>Nhớ Tôi</Checkbox>\r\n          <Link className=\"login-form-forgot\" to=\"/account/forgot\">\r\n            Quên mật khẩu\r\n          </Link>\r\n        </div>\r\n        <Button\r\n          className=\"login-form-submit\"\r\n          onClick={handleOnSubmit}\r\n        >\r\n          Đăng ký\r\n        </Button>\r\n        <Divider className=\"login-form-divider\">HOẶC</Divider>\r\n        <div className=\"login-form-functional\">\r\n          <Button\r\n            className=\"login-form-facebook\"\r\n            icon={<FacebookFilled />}\r\n          >\r\n            Facebook\r\n          </Button>\r\n          <Button\r\n            className=\"login-form-google\"\r\n            icon={<GoogleCircleFilled />}\r\n          >\r\n            Google\r\n          </Button>\r\n        </div>\r\n        <div className=\"login-form-register\">\r\n          <span> Bạn đã có tài khoản Unimi? </span>\r\n          <span>\r\n            <Link to=\"/account/login\" className=\"form-change-label\">\r\n              Đăng nhập\r\n            </Link>\r\n          </span>\r\n        </div>\r\n      </Space>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegisterForm.propTypes = {\r\n  RegisterAction: PropTypes.func.isRequired,\r\n  isAuth: PropTypes.bool,\r\n};\r\n\r\nRegisterForm.defaultProps = { isAuth: null };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  RegisterAction: Register,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(RegisterForm);\r\n","// libs\r\nimport React from 'react';\r\n// components\r\nimport RegisterForm from './mains/RegisterForm';\r\n// other\r\nimport Svg4 from '../../assets/Take Away-pana.svg';\r\n\r\nconst Register = () => (\r\n  <div className=\"login-wrapper\">\r\n    <div className=\"login-wrapper-inner container\">\r\n      <div className=\"login-image-wrapper\">\r\n        <img src={Svg4} alt=\"\" className=\"login-image\" />\r\n      </div>\r\n      <RegisterForm />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst ContentBlock = ({ content }) => (\r\n  <div className=\"content-block-wrapper\">\r\n    <div className=\"container\">\r\n      <div className={classNames('content-block__main ', content.position)}>\r\n        <div className=\"content-block__content\">\r\n          <h1 className=\"heading content-block__heading\">{content.heading}</h1>\r\n          <p className=\"content-block__paragraph\">{content.paragraph}</p>\r\n          <Link to={content.link} className=\"btn btn-secondary\">\r\n            {content.button}\r\n          </Link>\r\n        </div>\r\n        <div className=\"content-block__image\">\r\n          <img src={content.img} alt=\"None\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nContentBlock.propTypes = {\r\n  content: PropTypes.shape({\r\n    position: PropTypes.string.isRequired,\r\n    heading: PropTypes.string.isRequired,\r\n    paragraph: PropTypes.string.isRequired,\r\n    img: PropTypes.string.isRequired,\r\n    link: PropTypes.string.isRequired,\r\n    button: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ContentBlock;\r\n","export default __webpack_public_path__ + \"static/media/Online Groceries-pana.735aee9d.svg\";","export default __webpack_public_path__ + \"static/media/Online Groceries-amico.d1d16d93.svg\";","import React from 'react';\r\nimport { Carousel } from 'antd';\r\nimport ContentBlock from '../../components/ContentBlock';\r\nimport Svg7 from '../../assets/Online Groceries-pana.svg';\r\nimport Svg8 from '../../assets/Online Groceries-amico.svg';\r\nimport Svg9 from '../../assets/Discount-pana.svg';\r\n\r\nconst Infos = [\r\n  {\r\n    key: 'k1',\r\n    position: 'right',\r\n    heading: 'Unimi Food tới rồi đây!',\r\n    caption: '',\r\n    paragraph: 'Còn chần chờ gì mà không đặt Unimi ngay?',\r\n    link: '/account/login',\r\n    button: 'Cùng khám phá',\r\n    img: Svg7,\r\n  },\r\n  {\r\n    key: 'k2',\r\n    position: 'left',\r\n    heading: 'Giảm giá khủng',\r\n    caption: '',\r\n    paragraph:\r\n      'Nhiều ưu đãi mỗi ngày đang chờ đợi bạn tại Unimi đấy!',\r\n    link: '/',\r\n    button: 'Đặt hàng ngay',\r\n    img: Svg9,\r\n  },\r\n  {\r\n    key: 'k3',\r\n    position: 'right',\r\n    heading: 'Tha hồ lựa chọn',\r\n    caption: '',\r\n    paragraph: 'Đa dạng món ngon trên khắp địa bàn thành phố! ',\r\n    link: '/',\r\n    button: 'Đặt hàng ngay',\r\n    img: Svg8,\r\n  },\r\n];\r\nconst LandingPage = () => (\r\n  <div className=\"landing-page-wrapper\">\r\n    <Carousel autoplay>\r\n      {Infos.map((info) => (\r\n        <ContentBlock content={info} key={info.key} />\r\n      ))}\r\n    </Carousel>\r\n  </div>\r\n);\r\n\r\nexport default LandingPage;\r\n","export default __webpack_public_path__ + \"static/media/Discount-pana.2bab68a6.svg\";","export const tagsValue = {\r\n  'tra-sua': {\r\n    id: 4,\r\n    label: 'Trà sữa',\r\n    value: 'magenta',\r\n  },\r\n  'an-vat': {\r\n    id: 10,\r\n    label: 'Ăn vặt',\r\n    value: 'volcano',\r\n  },\r\n  'bua-toi': {\r\n    id: 8,\r\n    label: 'Bữa tối',\r\n    value: 'purple',\r\n  },\r\n  'bua-sang': {\r\n    id: 6,\r\n    label: 'Bữa sáng',\r\n    value: 'red',\r\n  },\r\n  'bua-trua': {\r\n    id: 7,\r\n    label: 'Bữa trưa',\r\n    value: 'orange',\r\n  },\r\n  'ca-phe': {\r\n    id: 5,\r\n    label: 'Cà phê',\r\n    value: 'gold',\r\n  },\r\n  'trai-cay': {\r\n    id: 9,\r\n    label: 'Trái cây',\r\n    value: 'green',\r\n  },\r\n  'cua-hang': {\r\n    id: 11,\r\n    label: 'Cửa hàng',\r\n    value: 'default',\r\n  },\r\n};\r\n\r\nexport const tags = [\r\n  'tra-sua',\r\n  'an-vat',\r\n  'bua-toi',\r\n  'trai-cay',\r\n  'bua-trua',\r\n  'bua-sang',\r\n  'ca-phe',\r\n  'cua-hang',\r\n];\r\nexport const storeCategories = [\r\n  {\r\n    id: 4,\r\n    name: 'Trà sữa',\r\n    slug: 'tra-sua',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Cà phê',\r\n    slug: 'ca-phe',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Bữa sáng',\r\n    slug: 'bua-sang',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Bữa trưa',\r\n    slug: 'bua-trua',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Bữa tối',\r\n    slug: 'bua-toi',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Trái cây',\r\n    slug: 'trai-cay',\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Ăn vặt',\r\n    slug: 'an-vat',\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Cửa hàng',\r\n    slug: 'cua-hang',\r\n  },\r\n];\r\n","// libs\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Tag } from 'antd';\r\nimport classnames from 'classnames';\r\n// dataSources\r\nimport { tagsValue } from '../../dataSources/TagStore';\r\n\r\nconst TagList = ({ classname, value }) => (\r\n  <Tag\r\n    className={classnames(classname, 'tag-list')}\r\n    color={tagsValue[value].value}\r\n  >\r\n    {tagsValue[value].label}\r\n  </Tag>\r\n);\r\n\r\nTagList.propTypes = {\r\n  value: PropTypes.string,\r\n  classname: PropTypes.string,\r\n};\r\n\r\nTagList.defaultProps = { value: 'default', classname: 'tagList' };\r\n\r\nexport default TagList;\r\n","// libs\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Divider } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n// components\r\nimport TagList from '../TagList';\r\n\r\nconst StoreCard = ({\r\n  storeImage,\r\n  storeAltImage,\r\n  storeName,\r\n  storeAddress,\r\n  storeId,\r\n  storeCategory,\r\n}) => (\r\n  <Link className=\"store-card-wrapper\" to={`/store/${storeId}`}>\r\n    <div className=\"store-card-wrapper-inner\">\r\n      <div className=\"store-card-image-wrapper\">\r\n        <img\r\n          className=\"store-card-image\"\r\n          src={`${process.env.REACT_APP_URL + storeImage}`}\r\n          alt={storeAltImage}\r\n        />\r\n      </div>\r\n      <div className=\"store-card-content-wrapper\">\r\n        <div className=\"store-card-content-wrapper-inner \">\r\n          <div className=\"store-card-info\">\r\n            <h4 className=\"store-card-name\" title={storeName}>\r\n              {storeName}\r\n            </h4>\r\n            <div className=\"store-card-address\" title={storeAddress}>\r\n              {storeAddress}\r\n            </div>\r\n          </div>\r\n          <Divider className=\"store-card-divider\" />\r\n          <div className=\"store-card-tag\">\r\n            <TagList\r\n              className=\"store-card-type\"\r\n              value={storeCategory}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Link>\r\n);\r\n\r\nStoreCard.propTypes = {\r\n  storeImage: PropTypes.string,\r\n  storeAltImage: PropTypes.string,\r\n  storeName: PropTypes.string,\r\n  storeAddress: PropTypes.string,\r\n  storeId: PropTypes.number,\r\n  storeCategory: PropTypes.string,\r\n};\r\n\r\nStoreCard.defaultProps = {\r\n  storeImage: null,\r\n  storeAltImage: 'store Image',\r\n  storeName: 'Default Store',\r\n  storeAddress: 'Default Address',\r\n  storeId: 1,\r\n  storeCategory: 'defaut',\r\n};\r\n\r\nexport default StoreCard;\r\n","// libs\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Spin, Alert, Empty } from 'antd';\r\n\r\nconst Loading = ({ isLoading, isError, ...props }) => {\r\n  if (isLoading) {\r\n    return (\r\n      <Alert\r\n        type=\"info\"\r\n        className=\"loading-alert alert-info\"\r\n        action={<Spin tip=\"Loading...\" className=\"show-banner\" />}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (isError) {\r\n    return <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />;\r\n  }\r\n\r\n  return { ...props.children };\r\n};\r\n\r\nLoading.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  isError: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Loading;\r\n","// libs\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Pagination } from 'antd';\r\n// components\r\nimport StoreCard from '../../../../components/StoreCard';\r\nimport Loading from '../../../../components/Loading';\r\nimport { usePagination } from '../../../../hooks/usePagination';\r\n// redux\r\n\r\nconst HomeBody = ({ storeViewList, isLoading }) => {\r\n  const [currentPage, pageSize, beginItem, endItem, handleOnChange] =\r\n    usePagination({\r\n      current: 1,\r\n      itemsPerPage: 15,\r\n      totalItem: storeViewList.length,\r\n    });\r\n\r\n  useEffect(() => {}, [storeViewList]);\r\n\r\n  return (\r\n    <div className=\"home-body-wrapper\">\r\n      <Loading\r\n        isLoading={isLoading}\r\n        isError={storeViewList.length === 0}\r\n      >\r\n        <div className=\"home-body-wrapper-inner\">\r\n          <div className=\"store-list-wrapper\">\r\n            {storeViewList &&\r\n              storeViewList\r\n                .slice(beginItem, endItem)\r\n                .map((store) => (\r\n                  <StoreCard\r\n                    key={store.id}\r\n                    storeAddress={store.address}\r\n                    storeName={store.name}\r\n                    storeImage={store.logo}\r\n                    storeAltImage={`${store.name}-picture`}\r\n                    storeId={store.id}\r\n                    storeCategory={store.store_category.slug}\r\n                  />\r\n                ))}\r\n          </div>\r\n          <div className=\"store-pagination-wrapper\">\r\n            <Pagination\r\n              className=\"store-pagination\"\r\n              defaultPageSize={pageSize}\r\n              defaultCurrent={1}\r\n              total={storeViewList.length}\r\n              current={currentPage}\r\n              onChange={handleOnChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Loading>\r\n    </div>\r\n  );\r\n};\r\n\r\nHomeBody.propTypes = {\r\n  storeViewList: PropTypes.arrayOf(PropTypes.shape({})),\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nHomeBody.defaultProps = {\r\n  storeViewList: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  storeViewList: state.storeview.storeList,\r\n  isLoading: state.storeview.isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeBody);\r\n","// libs\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const usePagination = ({\r\n  current,\r\n  itemsPerPage,\r\n  // totalItem,\r\n}) => {\r\n  const [currentPage, setCurrentPage] = useState(current);\r\n  // const totalPage = Math.ceil(totalItem / itemsPerPage);\r\n  const beginItem = (currentPage - 1) * itemsPerPage;\r\n  const endItem = beginItem + itemsPerPage;\r\n  const [pageSize] = useState(itemsPerPage);\r\n\r\n  const handleOnChangePage = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  useEffect(() => {}, [pageSize, currentPage]);\r\n\r\n  return [\r\n    currentPage,\r\n    pageSize,\r\n    beginItem,\r\n    endItem,\r\n    handleOnChangePage,\r\n  ];\r\n};\r\n","// libs\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Select, Tag } from 'antd';\r\n// dataSources\r\nimport { tags, tagsValue } from '../../dataSources/TagStore';\r\n\r\nconst tagRender = (props) => {\r\n  const { label, value, closable, onClose } = props;\r\n  const onPreventMouseDown = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  };\r\n  return (\r\n    <Tag\r\n      color={value}\r\n      onMouseDown={onPreventMouseDown}\r\n      closable={closable}\r\n      onClose={onClose}\r\n      style={{ marginRight: 3 }}\r\n    >\r\n      {label}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nconst StoreCategorySelect = ({ handleOnChange }) => (\r\n  <Select\r\n    allowClear\r\n    mode=\"multiple\"\r\n    onChange={handleOnChange}\r\n    tagRender={tagRender}\r\n    className=\"category-select\"\r\n    placeholder=\"Tìm kiếm theo\"\r\n    showArrow\r\n  >\r\n    {tags.map((item) => (\r\n      <Select.Option key={item} value={tagsValue[item].value}>\r\n        {tagsValue[item].label}\r\n      </Select.Option>\r\n    ))}\r\n  </Select>\r\n);\r\n\r\nStoreCategorySelect.propTypes = {\r\n  handleOnChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default StoreCategorySelect;\r\n","import * as type from './type';\r\nimport storeApi from '../api/storeApi';\r\n\r\nexport const loadStoreView = () => (dispatch) =>\r\n  dispatch({ type: type.STORE_VIEW_LOAD });\r\n\r\nexport const loadStore = () => (dispatch) =>\r\n  dispatch({ type: type.STORE_LOAD });\r\n\r\nexport const storeSelectCategory = (listStore) => (dispatch) => {\r\n  dispatch(loadStoreView());\r\n  setTimeout(() => {\r\n    dispatch({\r\n      type: type.STORE_VIEW_LOAD_SUCCESS,\r\n      payload: listStore,\r\n    });\r\n  }, 300);\r\n};\r\n\r\nexport const loadStoreList = () => async (dispatch) => {\r\n  loadStore();\r\n  const store = await storeApi.storeGetList();\r\n  dispatch({ type: type.STORE_LOAD_SUCCESS, payload: store.data });\r\n};\r\n\r\nexport const loadStoreByID = () => (dispatch) =>\r\n  dispatch({\r\n    type: type.STORE_ID_LOAD,\r\n  });\r\n\r\nexport const storeByID = (storeId) => async (dispatch) => {\r\n  dispatch(loadStoreByID());\r\n  try {\r\n    const res = await storeApi.getStoreByID(storeId);\r\n    if (res.status === 'Error') {\r\n      dispatch({\r\n        type: type.STORE_ID_LOAD_FAILED,\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: type.STORE_ID_LOAD_SUCCESS,\r\n          payload: res.data,\r\n        });\r\n      }, 300);\r\n    }\r\n  } catch (error) {\r\n    if (error.response) {\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      dispatch({\r\n        type: type.STORE_ID_LOAD_FAILED,\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const AddCart = (item) => (dispatch) =>\r\n  dispatch({\r\n    type: type.STORE_ID_ADD_CART,\r\n    payload: item,\r\n  });\r\n\r\nexport const RemoveCart = (item) => (dispatch) =>\r\n  dispatch({\r\n    type: type.STORE_ID_REMOVE_CART,\r\n    payload: item,\r\n  });\r\n","// libs\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n// components\r\nimport HomeBody from './mains/HomeBody';\r\nimport StoreCategorySelect from '../../components/StoreCategorySelect';\r\n// dataSources\r\nimport { tags, tagsValue } from '../../dataSources/TagStore';\r\n// redux\r\nimport {\r\n  loadStoreList,\r\n  storeSelectCategory,\r\n} from '../../actions/store';\r\n\r\nconst Home = ({ storeData, loadStoreData, showStore }) => {\r\n  const [category, setCategory] = useState(tags);\r\n\r\n  const handleOnChange = (value) => {\r\n    if (value.length > 0) {\r\n      const newCategoryList = tags.filter((item) => {\r\n        const find = tagsValue[item].value;\r\n        return value.includes(find) ? item : null;\r\n      });\r\n      setCategory(newCategoryList);\r\n    } else {\r\n      setCategory(tags);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadStoreData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (storeData.length > 0) {\r\n      const showStoreByCategory = storeData.filter((store) => {\r\n        const storeCategory = store.store_category.slug;\r\n        return category.includes(storeCategory) ? store : null;\r\n      });\r\n      showStore(showStoreByCategory);\r\n    }\r\n  }, [category, storeData]);\r\n\r\n  return (\r\n    <div className=\"home-wrapper\">\r\n      <div className=\"home-wrapper-inner\">\r\n        <StoreCategorySelect handleOnChange={handleOnChange} />\r\n        <HomeBody />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  storeData: PropTypes.arrayOf(PropTypes.shape({})),\r\n  loadStoreData: PropTypes.func.isRequired,\r\n  showStore: PropTypes.func.isRequired,\r\n};\r\n\r\nHome.defaultProps = {\r\n  storeData: null,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  storeData: state.storedata.storeDataList,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loadStoreData: loadStoreList,\r\n  showStore: storeSelectCategory,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","// libs\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Rate, Badge } from 'antd';\r\nimport {\r\n  DollarOutlined,\r\n  InfoCircleFilled,\r\n  MailFilled,\r\n  PhoneFilled,\r\n} from '@ant-design/icons';\r\n// components\r\nimport TagList from '../../../../components/TagList';\r\n\r\nconst StoreProfile = ({ store }) => {\r\n  useEffect(() => {}, [store]);\r\n\r\n  return (\r\n    <div className=\"store-profile-wrapper\">\r\n      <div className=\"store-profile-wrapper-inner\">\r\n        <div className=\"store-profile-avatar\">\r\n          <img\r\n            className=\"store-profile-avatar-image\"\r\n            src={`${process.env.REACT_APP_URL + store.logo}`}\r\n            alt=\"logo-store\"\r\n          />\r\n        </div>\r\n        <div className=\"store-profile-info\">\r\n          <div className=\"store-profile-info-tag\">\r\n            {store?.store_category && (\r\n              <TagList\r\n                className=\"profile-tag\"\r\n                value={store.store_category.slug}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"store-profile-info-heading\">\r\n            <h2 className=\"store-name\">{store?.name}</h2>\r\n            <span className=\"store-address\">{store?.address}</span>\r\n            <br />\r\n            <Badge\r\n              status=\"success\"\r\n              text=\"Mở cửa\"\r\n              className=\"store-status\"\r\n            />\r\n          </div>\r\n          <div className=\"store-profile-info-description item-row\">\r\n            <InfoCircleFilled />\r\n            <span className=\"store-description-label\">\r\n              {store?.description}\r\n            </span>\r\n          </div>\r\n          <Rate allowHalf defaultValue={2.5} className=\"store-rate\" />\r\n          <div className=\"store-profile-info-contact\">\r\n            <div className=\"store-price item-row\">\r\n              <DollarOutlined />\r\n              10000 - 50000\r\n            </div>\r\n            <div className=\"store-email item-row\">\r\n              <MailFilled />\r\n              {store?.email}\r\n            </div>\r\n            <div className=\"store-phone item-row\">\r\n              <PhoneFilled />\r\n              {store?.phone}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStoreProfile.propTypes = {\r\n  store: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    logo: PropTypes.string,\r\n    description: PropTypes.string,\r\n    phone: PropTypes.string,\r\n    email: PropTypes.string,\r\n    store_category: PropTypes.shape({\r\n      slug: PropTypes.string,\r\n    }),\r\n    address: PropTypes.string,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nStoreProfile.defaultProps = {\r\n  store: null,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  store: state.storeid.storeId,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(StoreProfile);\r\n","// libs\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { AddCart } from '../../../../actions/store';\r\n\r\nconst StoreItem = ({ storeItem, isAuth, addCart }) => {\r\n  const history = useHistory();\r\n  const handleOnClick = () => {\r\n    if (isAuth) {\r\n      addCart(storeItem);\r\n    } else {\r\n      const path = '/account/login';\r\n      history.push(path);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"store-item-wrapper\">\r\n      <div className=\"store-item-wrapper-inner\">\r\n        <div className=\"store-item-avatar\">\r\n          <img\r\n            src={`${process.env.REACT_APP_URL}${storeItem.image}`}\r\n            alt={storeItem?.name}\r\n            className=\"store-item-avatar-image\"\r\n          />\r\n        </div>\r\n        <div className=\"store-item-name\">{storeItem?.name}</div>\r\n        <div className=\"store-item-price\">\r\n          {storeItem?.price}\r\n          <span>đ</span>\r\n        </div>\r\n        <Button\r\n          className=\"store-item-button\"\r\n          icon={<PlusOutlined />}\r\n          size=\"small\"\r\n          onClick={handleOnClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStoreItem.defaultProps = {\r\n  storeItem: null,\r\n  isAuth: false,\r\n};\r\n\r\nStoreItem.propTypes = {\r\n  storeItem: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    image: PropTypes.string,\r\n    price: PropTypes.number,\r\n  }),\r\n  addCart: PropTypes.func.isRequired,\r\n  isAuth: PropTypes.bool,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addCart: AddCart,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(StoreItem);\r\n","// libs\r\nimport React from 'react';\r\nimport { Card } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n// components\r\nimport StoreItem from '../StoreItem';\r\n\r\nconst StoreMenuItem = ({ menuItem }) => (\r\n  <Card title={menuItem.name} className=\"store-menu-item-wrapper\">\r\n    <div className=\"store-menu-item-wrapper-inner\">\r\n      {menuItem.items.map((item) => (\r\n        <StoreItem key={item.id} storeItem={item} />\r\n      ))}\r\n    </div>\r\n  </Card>\r\n);\r\n\r\nStoreMenuItem.propTypes = {\r\n  menuItem: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    items: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number,\r\n      }),\r\n    ),\r\n  }).isRequired,\r\n};\r\n\r\nexport default StoreMenuItem;\r\n","// libs\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n// components\r\nimport Loading from '../../../../components/Loading';\r\nimport StoreMenuItem from '../../components/StoreMenuItem';\r\n\r\nconst StoreMenu = ({ menu }) => {\r\n  const [hasItem, setHasItem] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    if (menu.length > 0) {\r\n      setHasItem(true);\r\n      setIsLoading(false);\r\n    } else {\r\n      setHasItem(false);\r\n      setIsLoading(false);\r\n    }\r\n  }, [menu]);\r\n  return (\r\n    <div className=\"store-menu-wrapper\">\r\n      <div className=\"store-menu-wrapper-inner\">\r\n        <div className=\"store-menu-heading\">Thực đơn</div>\r\n        <Loading isLoading={isLoading} isError={!hasItem}>\r\n          <div className=\"store-menu-list-wrapper\">\r\n            {menu.length > 0 &&\r\n              menu.map((item) => (\r\n                <StoreMenuItem key={item.id} menuItem={item} />\r\n              ))}\r\n          </div>\r\n        </Loading>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStoreMenu.defaultProps = {\r\n  menu: [],\r\n};\r\n\r\nStoreMenu.propTypes = {\r\n  menu: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n    }),\r\n  ),\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  menu: state.storeid.menu,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(StoreMenu);\r\n","// libs\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\r\n// redux\r\nimport { AddCart, RemoveCart } from '../../../../actions/store';\r\n\r\nconst CartItem = ({ cartItem, addCart, removeCart }) => {\r\n  useEffect(() => {}, [cartItem]);\r\n\r\n  const handlePlusButton = () => {\r\n    addCart(cartItem.item);\r\n  };\r\n  const handleMinusButton = () => {\r\n    removeCart(cartItem.item);\r\n  };\r\n\r\n  const { amount, item } = cartItem;\r\n  return (\r\n    <div className=\"cart-item-wrapper\">\r\n      <div className=\"cart-item-wrapper-inner\">\r\n        <div className=\"cart-item-avatar\">\r\n          <img\r\n            src={`${process.env.REACT_APP_URL}${item.image}`}\r\n            alt={item?.name}\r\n            className=\"cart-item-avatar-image\"\r\n          />\r\n        </div>\r\n        <div className=\"cart-item-name\">{item?.name}</div>\r\n        <div className=\"cart-item-amount\">{amount}</div>\r\n        <div className=\"cart-item-function\">\r\n          <Button\r\n            className=\"cart-item-button\"\r\n            icon={<PlusOutlined />}\r\n            onClick={handlePlusButton}\r\n          />\r\n          <Button\r\n            className=\"cart-item-button\"\r\n            icon={<MinusOutlined />}\r\n            onClick={handleMinusButton}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCartItem.propTypes = {\r\n  cartItem: PropTypes.shape({\r\n    amount: PropTypes.number,\r\n    item: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      image: PropTypes.string,\r\n    }),\r\n  }).isRequired,\r\n  addCart: PropTypes.func.isRequired,\r\n  removeCart: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addCart: AddCart,\r\n  removeCart: RemoveCart,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem);\r\n","// libs\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Empty } from 'antd';\r\n// components\r\nimport CardItem from '../CartItem';\r\n\r\nconst StoreOrderCart = ({ cart }) => {\r\n  useEffect(() => {}, [cart]);\r\n  return (\r\n    <div className=\"store-order-cart-wrapper\">\r\n      <div className=\"store-order-cart-wrapper-inner\">\r\n        {cart.length === 0 && (\r\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        )}\r\n        {cart &&\r\n          cart.map((cartItem) => (\r\n            <CardItem key={cartItem.item.id} cartItem={cartItem} />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStoreOrderCart.defaultProps = {\r\n  cart: null,\r\n};\r\n\r\nStoreOrderCart.propTypes = {\r\n  cart: PropTypes.arrayOf(PropTypes.shape({})),\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cart: state.storeid.cart,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(StoreOrderCart);\r\n","// libs\r\nimport React from 'react';\r\nimport { Button } from 'antd';\r\nimport { ShoppingCartOutlined } from '@ant-design/icons';\r\n// components\r\nimport StoreOrderCart from '../StoreOrderCart';\r\n\r\nconst StoreOrderBody = () => (\r\n  <div className=\"store-order-body-wrapper\">\r\n    <div className=\"store-order-body-wrapper-inner\">\r\n      <StoreOrderCart />\r\n      <Button\r\n        className=\"store-order-body-button\"\r\n        icon={<ShoppingCartOutlined />}\r\n      >\r\n        Đặt hàng\r\n      </Button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default StoreOrderBody;\r\n","// libs\r\nimport React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// components\r\nimport StoreOrderBody from '../../components/StoreOrderBody';\r\n\r\nconst StoreOrder = () => {\r\n  console.log('store-odder');\r\n  return (\r\n    <div className=\"store-order-wrapper\">\r\n      <div className=\"store-order-wrapper-inner\">\r\n        <div className=\"store-order-heading\">Giỏ hàng</div>\r\n        <StoreOrderBody />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreOrder;\r\n","// libs\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n// components\r\nimport Loading from '../../components/Loading';\r\nimport StoreProfile from './mains/StoreProfile';\r\nimport StoreMenu from './mains/StoreMenu';\r\nimport StoreOrder from './mains/StoreOrder';\r\n// redux\r\nimport { storeByID } from '../../actions/store';\r\n\r\nconst Store = ({ store, getStore, isLoading, isError }) => {\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    getStore(id);\r\n  }, []);\r\n\r\n  useEffect(() => {}, [store, isLoading, isError]);\r\n  return (\r\n    <div className=\"store-page-wrapper\">\r\n      <Loading isLoading={isLoading} isError={isError}>\r\n        <div className=\"store-page-wrapper-inner\">\r\n          <StoreProfile />\r\n          <StoreMenu />\r\n          <StoreOrder />\r\n        </div>\r\n      </Loading>\r\n    </div>\r\n  );\r\n};\r\n\r\nStore.propTypes = {\r\n  store: PropTypes.shape({}),\r\n  getStore: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool,\r\n  isError: PropTypes.bool,\r\n};\r\n\r\nStore.defaultProps = {\r\n  store: null,\r\n  isLoading: true,\r\n  isError: false,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getStore: storeByID,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  store: state.storeid.storeId,\r\n  isLoading: state.storeid.isLoading,\r\n  isError: state.storeid.isError,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);\r\n","// libs\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const useImageUpload = () => {\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [isUploaded, setUploaded] = useState(false);\r\n  const [preview, setPreview] = useState();\r\n\r\n  // create a preview as a side effect, whenever selected file is changed\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n    setUploaded(true);\r\n\r\n    // free memory when ever this component is unmounted\r\n    // eslint-disable-next-line consistent-return\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  const onSelectFile = (e) => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      return;\r\n    }\r\n\r\n    // I've kept this example simple by using the first image instead of multiple\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n  return {\r\n    isUploaded,\r\n    preview,\r\n    selectedFile,\r\n    onSelectFile,\r\n  };\r\n};\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\n// libs\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, Divider, Input } from 'antd';\r\n// redux\r\nimport { connect } from 'react-redux';\r\nimport { UpdateAccount } from '../../actions/auth';\r\n// hook\r\nimport { useImageUpload } from '../../hooks/useImageUpload';\r\n// components\r\n\r\nconst UserProfile = ({\r\n  user,\r\n  isLoading,\r\n  isAuthenticated,\r\n  updateAccount,\r\n}) => {\r\n  if (isLoading) console.log(isLoading);\r\n  if (!isAuthenticated) return <Redirect to=\"/account/login\" />;\r\n\r\n  const [phone, setPhone] = useState(user.phone);\r\n  const [firstName, setFirstName] = useState(user.first_name);\r\n  const [lastName, setLastName] = useState(user.last_name);\r\n\r\n  const { preview, isUploaded, onSelectFile, selectedFile } =\r\n    useImageUpload();\r\n\r\n  const handleUpdateAvatar = () => {\r\n    const data = new FormData();\r\n    console.log(selectedFile);\r\n    if (selectedFile) data.append('avatar', selectedFile);\r\n    updateAccount(data, user.id);\r\n  };\r\n\r\n  const handleUpdateInfo = () => {\r\n    const data = new FormData();\r\n    if (phone !== user.phone && phone !== '') {\r\n      data.append('phone', phone);\r\n    }\r\n    if (firstName !== user.first_name && firstName !== '') {\r\n      data.append('first_name', firstName);\r\n    }\r\n    if (lastName !== user.last_name && lastName !== '') {\r\n      data.append('last_name', lastName);\r\n    }\r\n    updateAccount(data, user.id);\r\n  };\r\n  return (\r\n    <div className=\"user-profile-wrapper\">\r\n      <div className=\"user-profile-wrapper-inner\">\r\n        <div className=\"user-profile-header\">User information</div>\r\n        <div className=\"user-profile-body\">\r\n          <div className=\"user-profile-update-wrapper\">\r\n            <div className=\"user-profile-update-header\">\r\n              Update avatar\r\n            </div>\r\n            <div className=\"user-profile-update-body avatar-wrapper\">\r\n              <div className=\"avatar-wrapper-inner\">\r\n                <div className=\"avatar-view\">\r\n                  {!isUploaded ? (\r\n                    <img\r\n                      className=\"avatar-view-image\"\r\n                      src={`${\r\n                        process.env.REACT_APP_URL + user.avatar\r\n                      }`}\r\n                      alt=\"avatar1\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      className=\"avatar-view-image\"\r\n                      src={preview}\r\n                      alt=\"avatar\"\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div className=\"avatar-function\">\r\n                  <input\r\n                    id=\"user-profile-upload\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onSelectFile}\r\n                    hidden\r\n                  />\r\n                  <p className=\"avatar-function-label\">\r\n                    Upload form\r\n                    <label\r\n                      htmlFor=\"user-profile-upload\"\r\n                      className=\"avatar-function-upload-button\"\r\n                    >\r\n                      <UploadOutlined />\r\n                      Chose\r\n                    </label>\r\n                    GIF, JPEG, PNG, BMP accepted\r\n                  </p>\r\n                  <Button\r\n                    className=\"user-profile-update-button avatar-function-update-button\"\r\n                    onClick={handleUpdateAvatar}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Divider className=\"user-profile-update-divider\" />\r\n          <div className=\"user-profile-update-wrapper\">\r\n            <div className=\"user-profile-update-header\">\r\n              Update Info\r\n            </div>\r\n            <div className=\"user-profile-update-body profile-data-wrapper\">\r\n              <div className=\"profile-data-item\">\r\n                <div className=\"profile-data-label\"> First Name </div>\r\n                <Input\r\n                  className=\"profile-data-input\"\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                  value={firstName}\r\n                />\r\n              </div>\r\n              <div className=\"profile-data-item\">\r\n                <div className=\"profile-data-label\"> Last Name </div>\r\n                <Input\r\n                  className=\"profile-data-input\"\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                  value={lastName}\r\n                />\r\n              </div>\r\n              <div className=\"profile-data-item\">\r\n                <div className=\"profile-data-label\"> Phone </div>\r\n                <Input\r\n                  className=\"profile-data-input\"\r\n                  onChange={(e) => setPhone(e.target.value)}\r\n                  value={phone}\r\n                />\r\n              </div>\r\n              <Button\r\n                className=\"user-profile-update-button profile-data-update-button\"\r\n                onClick={handleUpdateInfo}\r\n              >\r\n                Save Change\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserProfile.propTypes = {\r\n  user: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    avatar: PropTypes.string,\r\n    username: PropTypes.string,\r\n    last_name: PropTypes.string,\r\n    first_name: PropTypes.string,\r\n    phone: PropTypes.string,\r\n  }),\r\n  isLoading: PropTypes.bool,\r\n  isAuthenticated: PropTypes.bool,\r\n  updateAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nUserProfile.defaultProps = {\r\n  isLoading: true,\r\n  user: null,\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  isLoading: state.auth.isLoadingAccount,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateAccount: UpdateAccount,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(UserProfile);\r\n","import axiosClient from './axiosClient';\r\n\r\nconst employeeApi = {\r\n  getSelf: () => {\r\n    const url = '/employee';\r\n    return axiosClient.get(url);\r\n  },\r\n  createStore: (params) => {\r\n    const url = '/store';\r\n    return axiosClient.post(url, params);\r\n  },\r\n};\r\n\r\nexport default employeeApi;\r\n","import * as type from './type';\r\nimport employeeApi from '../api/employeeApi';\r\n\r\nexport const LoadingEmployee = (dispatch) =>\r\n  dispatch({\r\n    type: type.EMPLOYEE_LOAD_PROFILE,\r\n  });\r\n\r\nexport const LoadEmployee = () => async (dispatch) => {\r\n  dispatch(LoadingEmployee);\r\n  try {\r\n    const res = await employeeApi.getSelf();\r\n    if (res.status === 'Error') {\r\n      dispatch({ type: type.EMPLOYEE_LOAD_PROFILE_FAILED });\r\n    } else {\r\n      dispatch({\r\n        type: type.EMPLOYEE_LOAD_PROFILE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: type.EMPLOYEE_LOAD_PROFILE_FAILED });\r\n  }\r\n};\r\n\r\nexport const CreateNewStore = (form) => async (dispatch) => {\r\n  try {\r\n    const res = await employeeApi.createStore(form);\r\n    if (res.status === 'Error') {\r\n      dispatch({ type: type.EMPLOYEE_CREATE_STORE_FAILED });\r\n    } else {\r\n      dispatch({\r\n        type: type.EMPLOYEE_CREATE_STORE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: type.EMPLOYEE_CREATE_STORE_FAILED });\r\n  }\r\n};\r\n","// libs\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n// components\r\nimport TagList from '../../../../components/TagList';\r\n\r\nconst StoreWorkspace = ({ store }) => {\r\n  if (store == null) return <> </>;\r\n  return (\r\n    <div className=\"store-workspace-wrapper\">\r\n      <Link to=\"/employee/store\">\r\n        <div className=\"store-workspace-wrapper-inner\">\r\n          <div className=\"store-workspace-image-wrapper\">\r\n            <img\r\n              className=\"store-workspace-image\"\r\n              src={`${process.env.REACT_APP_URL + store.logo}`}\r\n              alt=\"store-avatar\"\r\n            />\r\n          </div>\r\n          <div className=\"store-workspace-name\">{store.name}</div>\r\n          <div className=\"store-workspace-description\">\r\n            <p className=\"store-workspace-paragraph\">\r\n              {store.description}\r\n            </p>\r\n          </div>\r\n          <div className=\"store-card-tag\">\r\n            <TagList\r\n              className=\"store-card-type\"\r\n              value={store.store_category.slug}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nStoreWorkspace.defaultProps = {\r\n  store: null,\r\n};\r\n\r\nStoreWorkspace.propTypes = {\r\n  store: PropTypes.shape({\r\n    logo: PropTypes.string,\r\n    name: PropTypes.string,\r\n    description: PropTypes.string,\r\n    store_category: PropTypes.shape({\r\n      slug: PropTypes.string,\r\n    }),\r\n  }),\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  store: state.employee.employeeStore,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(StoreWorkspace);\r\n","// libs\r\nimport React, { useState } from 'react';\r\nimport { Modal, Button, Form, Input } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n// redux\r\nimport { connect } from 'react-redux';\r\nimport { CreateNewStore } from '../../../../actions/employee';\r\n\r\nconst CollectionCreateForm = ({ visible, onCreate, onCancel }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Create a new collection\"\r\n      okText=\"Create\"\r\n      cancelText=\"Cancel\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            form.resetFields();\r\n            onCreate(values);\r\n          })\r\n          .catch(() => {});\r\n      }}\r\n    >\r\n      <Form form={form}>\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Store name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input the name of store!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Store email\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"phone\"\r\n          label=\"Store phone\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input the phone of store!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CreateStore = ({ createStore }) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onCreate = (values) => {\r\n    createStore(values);\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Create Store\r\n      </Button>\r\n      <CollectionCreateForm\r\n        visible={isModalVisible}\r\n        onCreate={onCreate}\r\n        onCancel={handleCancel}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nCollectionCreateForm.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  onCreate: PropTypes.func.isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n};\r\n\r\nCreateStore.propTypes = {\r\n  createStore: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  createStore: CreateNewStore,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateStore);\r\n","// libs\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Empty } from 'antd';\r\n// redux\r\nimport { connect } from 'react-redux';\r\nimport { LoadEmployee } from '../../actions/employee';\r\n// component\r\nimport Loading from '../../components/Loading';\r\nimport StoreWorkspace from './mains/StoreWorkspace';\r\nimport CreateStore from './mains/CreateStore';\r\n\r\nconst EmployeeWorkspace = ({\r\n  loadEmployee,\r\n  isLoading,\r\n  isError,\r\n  user,\r\n  isAuth,\r\n  employeeStore,\r\n}) => {\r\n  const history = useHistory();\r\n  if (!isAuth) history.push('/login');\r\n  if (user.account_role !== 'employee') history.push('/');\r\n  useEffect(() => {\r\n    loadEmployee();\r\n  }, []);\r\n  useEffect(() => {}, [isAuth, isLoading, isError, employeeStore]);\r\n  return (\r\n    <div className=\"employee-workspace-wrapper\">\r\n      <Loading isLoading={isLoading} isError={isError}>\r\n        <div className=\"employee-workspace-wrapper-inner\">\r\n          <div className=\"employee-workspace-header\">\r\n            Employee Workspace\r\n          </div>\r\n          <div className=\"employee-workspace-body\">\r\n            <div className=\"employee-workspace-store-wrapper\">\r\n              <div className=\"employee-workspace-store-header\">\r\n                Your Store\r\n              </div>\r\n              <div className=\"employee-workspace-store-body\">\r\n                {!employeeStore.id ? (\r\n                  <Empty\r\n                    image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                    description={<span> No store yet! </span>}\r\n                  >\r\n                    <CreateStore />\r\n                  </Empty>\r\n                ) : (\r\n                  <StoreWorkspace />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Loading>\r\n    </div>\r\n  );\r\n};\r\n\r\nEmployeeWorkspace.defaultProps = {\r\n  employeeInfo: null,\r\n  employeeStore: null,\r\n  isLoading: true,\r\n  isError: false,\r\n  user: null,\r\n};\r\n\r\nEmployeeWorkspace.propTypes = {\r\n  employeeInfo: PropTypes.shape({\r\n    id: PropTypes.number,\r\n  }),\r\n  user: PropTypes.shape({\r\n    account_role: PropTypes.string,\r\n  }),\r\n  isAuth: PropTypes.bool.isRequired,\r\n  loadEmployee: PropTypes.func.isRequired,\r\n  employeeStore: PropTypes.shape({\r\n    id: PropTypes.number,\r\n  }),\r\n  isLoading: PropTypes.bool,\r\n  isError: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  employeeInfo: state.employee.employeeInfo,\r\n  employeeStore: state.employee.employeeStore,\r\n  isLoading: state.employee.isLoading,\r\n  isError: state.employee.isError,\r\n  user: state.auth.user,\r\n  isAuth: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loadEmployee: LoadEmployee,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(EmployeeWorkspace);\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\n// libs\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UploadOutlined, EditOutlined } from '@ant-design/icons';\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Descriptions,\r\n  Badge,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  TimePicker,\r\n  Select,\r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n// components\r\nimport Loading from '../../../../components/Loading';\r\nimport TagList from '../../../../components/TagList';\r\n// hook\r\nimport { useImageUpload } from '../../../../hooks/useImageUpload';\r\nimport { useStoreTime } from '../../../../hooks/useStoreTime';\r\n// redux\r\nimport {\r\n  LoadStore,\r\n  UpdateStore,\r\n} from '../../../../actions/storecontrol';\r\n// dataSource\r\nimport { storeCategories } from '../../../../dataSources/TagStore';\r\n\r\nconst CollectionCreateForm = ({\r\n  visible,\r\n  onCreate,\r\n  onCancel,\r\n  formData,\r\n}) => {\r\n  const formRef = useRef(null);\r\n  const [formControl] = Form.useForm();\r\n  useEffect(() => {\r\n    if (formRef.current) formControl.setFieldsValue(formData);\r\n  }, [formData, visible]);\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Edit store\"\r\n      okText=\"Create\"\r\n      cancelText=\"Cancel\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        formControl\r\n          .validateFields()\r\n          .then((values) => {\r\n            onCreate(values);\r\n            formControl.resetFields();\r\n          })\r\n          .catch(() => {});\r\n      }}\r\n    >\r\n      <Form\r\n        form={formControl}\r\n        layout=\"vertical\"\r\n        initialValues={formData}\r\n        ref={formRef}\r\n      >\r\n        <Form.Item name=\"name\" label=\"Name\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"email\" label=\"Email\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"phone\" label=\"Phone\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"address\" label=\"Address\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"store_category\" label=\"Category\">\r\n          <Select>\r\n            {storeCategories.map((category) => (\r\n              <Select.Option value={category.id} key={category.id}>\r\n                {category.name}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item name=\"open_time\" label=\"Open time\">\r\n          <TimePicker />\r\n        </Form.Item>\r\n        <Form.Item name=\"close_time\" label=\"Close time\">\r\n          <TimePicker />\r\n        </Form.Item>\r\n        <Form.Item name=\"description\" label=\"Description\">\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nCollectionCreateForm.defaultProps = {\r\n  formData: null,\r\n};\r\n\r\nCollectionCreateForm.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  onCreate: PropTypes.func.isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n  formData: PropTypes.shape({}),\r\n};\r\n\r\nconst StoreDashboardInfo = ({\r\n  loadStore,\r\n  employeeStore,\r\n  isLoading,\r\n  isError,\r\n  store,\r\n  updateStore,\r\n}) => {\r\n  const { preview, isUploaded, onSelectFile, selectedFile } =\r\n    useImageUpload();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [updateForm, setUpdateForm] = useState();\r\n  const { updateOpen, updateClose, storeState } = useStoreTime({\r\n    openTime: store?.open_time,\r\n    closeTIme: store?.close_time,\r\n  });\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (employeeStore) loadStore(employeeStore.id);\r\n  }, [employeeStore]);\r\n  useEffect(() => {\r\n    if (isError) history.push('/somethingwrong');\r\n  }, [isLoading, isError]);\r\n\r\n  useEffect(() => {\r\n    const newForm = {\r\n      name: store?.name,\r\n      email: store?.email,\r\n      phone: store?.phone,\r\n      address: store?.address,\r\n      description: store?.description,\r\n      open_time: moment(\r\n        store.open_time ? store.open_time : 0,\r\n        'HH:mm:ss',\r\n      ),\r\n      close_time: moment(\r\n        store.close_time ? store.close_time : 0,\r\n        'HH:mm:ss',\r\n      ),\r\n      store_category: store?.store_category?.id,\r\n    };\r\n    updateOpen(store.open_time);\r\n    updateClose(store.close_time);\r\n    setUpdateForm(newForm);\r\n  }, [store, employeeStore]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onCreate = (values) => {\r\n    const intialForm = new FormData();\r\n    if (values.name !== store.name && values.name !== null) {\r\n      intialForm.append('name', values.name);\r\n    }\r\n    if (values.address !== store.address && values.address !== null) {\r\n      intialForm.append('address', values.address);\r\n    }\r\n    if (\r\n      values.description !== store.description &&\r\n      values.description !== null\r\n    ) {\r\n      intialForm.append('description', values.description);\r\n    }\r\n    if (\r\n      values.store_category !== store.store_category &&\r\n      values.category !== null\r\n    ) {\r\n      intialForm.append('store_category', values.store_category);\r\n    }\r\n    if (values.phone !== store.phone && values.phone !== null) {\r\n      intialForm.append('phone', values.phone);\r\n    }\r\n    if (\r\n      values.open_time.format(moment.HTML5_FMT.TIME_SECONDS) !==\r\n        store.open_time &&\r\n      values.open_time.format(moment.HTML5_FMT.TIME_SECONDS) !== ''\r\n    ) {\r\n      intialForm.append(\r\n        'open_time',\r\n        values.open_time.format(moment.HTML5_FMT.TIME_SECONDS),\r\n      );\r\n    }\r\n    if (\r\n      values.close_time.format(moment.HTML5_FMT.TIME_SECONDS) !==\r\n      store.close_time\r\n    ) {\r\n      intialForm.append(\r\n        'close_time',\r\n        values.close_time.format(moment.HTML5_FMT.TIME_SECONDS),\r\n      );\r\n    }\r\n    updateStore(intialForm, store.id);\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleUpdateAvatar = () => {\r\n    const data = new FormData();\r\n    if (selectedFile) data.append('logo', selectedFile);\r\n    updateStore(data, store.id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-tab-wrapper\">\r\n      <Loading isLoading={isLoading} isError={isError}>\r\n        <div className=\"dashboard-tab-wrapper-inner\">\r\n          <div className=\"dashboard-info-update-wrapper\">\r\n            <div className=\"info-update-header\">Store logo</div>\r\n            <div className=\"info-update-body avatar-wrapper\">\r\n              <div className=\"avatar-wrapper-inner\">\r\n                <div className=\"avatar-view\">\r\n                  {!isUploaded ? (\r\n                    <img\r\n                      className=\"avatar-view-image\"\r\n                      src={`${process.env.REACT_APP_URL}${store.logo}`}\r\n                      alt=\"avatar1\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      className=\"avatar-view-image\"\r\n                      src={preview}\r\n                      alt=\"avatar\"\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div className=\"avatar-function\">\r\n                  <input\r\n                    id=\"store-profile-upload\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onSelectFile}\r\n                    hidden\r\n                  />\r\n                  <p className=\"avatar-function-label\">\r\n                    Upload form\r\n                    <label\r\n                      htmlFor=\"store-profile-upload\"\r\n                      className=\"avatar-function-upload-button\"\r\n                    >\r\n                      <UploadOutlined />\r\n                      Chose\r\n                    </label>\r\n                    GIF, JPEG, PNG, BMP accepted\r\n                  </p>\r\n                  <Button\r\n                    className=\"user-profile-update-button avatar-function-update-button\"\r\n                    onClick={handleUpdateAvatar}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Divider />\r\n            <div className=\"dashboard-info-update-wrapper\">\r\n              <div className=\"info-update-header\">\r\n                <span>Store Information</span>\r\n                <Button\r\n                  className=\"info-update-header-button\"\r\n                  icon={<EditOutlined />}\r\n                  onClick={showModal}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </div>\r\n              <div className=\"info-update-body store-profile\">\r\n                <Descriptions bordered>\r\n                  <Descriptions.Item label=\"Name\" span={2}>\r\n                    {store?.name}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Category\">\r\n                    {store?.store_category && (\r\n                      <TagList value={store.store_category.slug} />\r\n                    )}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Email\" span={2}>\r\n                    {store?.email}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Phone\" span={1}>\r\n                    {store?.phone}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Address\" span={3}>\r\n                    {store?.address}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Open time\" span={1}>\r\n                    {store?.open_time}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Close Time\" span={1}>\r\n                    {store?.close_time}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Status\" span={1}>\r\n                    <Badge\r\n                      status={storeState.status}\r\n                      text={storeState.text}\r\n                    />\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Description\" span={3}>\r\n                    {store?.description}\r\n                  </Descriptions.Item>\r\n                </Descriptions>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CollectionCreateForm\r\n            visible={isModalVisible}\r\n            onCreate={onCreate}\r\n            onCancel={handleCancel}\r\n            formData={updateForm}\r\n          />\r\n        </div>\r\n      </Loading>\r\n    </div>\r\n  );\r\n};\r\n\r\nStoreDashboardInfo.defaultProps = {\r\n  employeeStore: null,\r\n  store: null,\r\n};\r\n\r\nStoreDashboardInfo.propTypes = {\r\n  loadStore: PropTypes.func.isRequired,\r\n  updateStore: PropTypes.func.isRequired,\r\n  employeeStore: PropTypes.shape({\r\n    id: PropTypes.number,\r\n  }),\r\n  isLoading: PropTypes.bool.isRequired,\r\n  isError: PropTypes.bool.isRequired,\r\n  store: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    email: PropTypes.string,\r\n    phone: PropTypes.string,\r\n    logo: PropTypes.string,\r\n    address: PropTypes.string,\r\n    description: PropTypes.string,\r\n    open_time: PropTypes.string,\r\n    close_time: PropTypes.string,\r\n    store_category: PropTypes.shape({\r\n      slug: PropTypes.string,\r\n      id: PropTypes.number,\r\n    }),\r\n  }),\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  employeeStore: state.employee.employeeStore,\r\n  isLoading: state.storecontrol.isLoadingStore,\r\n  isError: state.storecontrol.isError,\r\n  store: state.storecontrol.storeInfo,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loadStore: LoadStore,\r\n  updateStore: UpdateStore,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(StoreDashboardInfo);\r\n","// libs\r\nimport { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n\r\nexport const useStoreTime = ({ openTime, closeTime }) => {\r\n  const [open, setOpen] = useState(openTime);\r\n  const [close, setClose] = useState(closeTime);\r\n  const [storeState, setStoreState] = useState({\r\n    status: 'default',\r\n    text: 'undefied',\r\n  });\r\n  useEffect(() => {\r\n    if (close === null && open === null) {\r\n      setStoreState({\r\n        status: 'default',\r\n        text: 'undefied',\r\n      });\r\n    }\r\n    const now = moment();\r\n    const isAfter = now.isAfter(moment(open, 'HH:mm:ss'));\r\n    const isBefore = now.isBefore(moment(close, 'HH:mm:ss'));\r\n    if (!isAfter || !isBefore) {\r\n      setStoreState({ status: 'error', text: 'Not open' });\r\n    }\r\n    if (isAfter && isBefore) {\r\n      setStoreState({ status: 'success', text: 'Openning' });\r\n    }\r\n  }, [open, close]);\r\n\r\n  const updateOpen = (value) => setOpen(value);\r\n  const updateClose = (value) => setClose(value);\r\n  return {\r\n    updateOpen,\r\n    updateClose,\r\n    storeState,\r\n  };\r\n};\r\n","// libs\r\nimport React from 'react';\r\n\r\nconst StoreDashboardOrder = () => (\r\n  <div className=\"dashboard-tab-wrapper\">\r\n    <div className=\"dashboard-tab-wrapper-inner\">\r\n      This is store order\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default StoreDashboardOrder;\r\n","export const isActive = [\r\n  {\r\n    id: 1,\r\n    label: 'Available',\r\n    value: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    label: 'Not Available',\r\n    value: false,\r\n  },\r\n];\r\n","import React, { useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Modal, Input, Select, Button, Upload } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n// dataSources\r\nimport { isActive } from '../../../../dataSources/isActive';\r\n// hooks\r\nimport { useImageUpload } from '../../../../hooks/useImageUpload';\r\n\r\nconst ModuleUpdateItem = ({\r\n  visible,\r\n  onCreate,\r\n  onCancel,\r\n  formData,\r\n}) => {\r\n  const formRef = useRef(null);\r\n  const [form] = Form.useForm();\r\n\r\n  const dummyRequest = ({ onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess('ok');\r\n    }, 0);\r\n  };\r\n\r\n  const { selectedFile, onSelectFile } = useImageUpload();\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(formData);\r\n  }, [visible, formData]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Edit item\"\r\n      okText=\"Edit\"\r\n      cancelText=\"Cancel\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            console.log(values);\r\n            onCreate(values);\r\n            form.resetFields();\r\n          })\r\n          .catch(() => {});\r\n      }}\r\n    >\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        ref={formRef}\r\n        initialValues={formData}\r\n      >\r\n        <Form.Item label=\"Item Name\" name=\"name\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"is_active\" label=\"Item status\">\r\n          <Select placeholder=\"Menu status\">\r\n            {isActive.map((option) => (\r\n              <Select.Option value={option.value} key={option.id}>\r\n                {option.label}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"Item price\" name=\"price\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"image\"\r\n          label=\"Item image\"\r\n          valuePropName=\"file\"\r\n          getValueFromEvent={selectedFile}\r\n        >\r\n          <Upload\r\n            name=\"logo\"\r\n            customRequest={dummyRequest}\r\n            listType=\"picture\"\r\n            fileList={selectedFile}\r\n          >\r\n            <Button icon={<UploadOutlined />} onClick={onSelectFile}>\r\n              Click to upload\r\n            </Button>\r\n          </Upload>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModuleUpdateItem.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  onCreate: PropTypes.func.isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n  formData: PropTypes.shape({}).isRequired,\r\n};\r\n\r\nexport default ModuleUpdateItem;\r\n","// libs\r\nimport React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Badge } from 'antd';\r\nimport { EditFilled } from '@ant-design/icons';\r\n// components\r\nimport ModuleUpdateItem from '../ModuleUpdateItem';\r\n// redux\r\nimport { UpdateItem } from '../../../../actions/storecontrol';\r\n\r\nconst Item = ({ item, updateItem }) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [initialData, setInitialData] = useState({\r\n    name: item.name,\r\n    is_active: item.is_active,\r\n    price: item.price,\r\n    image: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setInitialData({\r\n      name: item.name,\r\n      is_active: item.is_active,\r\n      price: item.price,\r\n      image: null,\r\n    });\r\n  }, [item]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const onCreate = (values) => {\r\n    const createForm = new FormData();\r\n    if (values.name !== item.name) {\r\n      createForm.append('name', values.name);\r\n    }\r\n    if (values.is_active !== item.is_active) {\r\n      createForm.append('is_active', values.is_active);\r\n    }\r\n    if (values.price !== item.price) {\r\n      createForm.append('price', values.price);\r\n    }\r\n    if (values.image !== null) {\r\n      createForm.append('image', values.image.file.originFileObj);\r\n    }\r\n    if (!createForm.entries().next().done) {\r\n      updateItem(createForm, item.id);\r\n    }\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-item-wrapper\">\r\n      <div className=\"dashboard-item-wrapper-inner\">\r\n        <div className=\"dashboard-item-avatar\">\r\n          <img\r\n            src={`${process.env.REACT_APP_URL}${item.image}`}\r\n            alt={item?.name}\r\n            className=\"dashboard-item-avatar-image\"\r\n          />\r\n        </div>\r\n        <Badge\r\n          className=\"dashboard-item-name\"\r\n          status={item.is_active ? 'success' : 'error'}\r\n          text={item.name}\r\n        />\r\n        <div className=\"dashboard-item-price\">\r\n          {item?.price}\r\n          <span>đ</span>\r\n        </div>\r\n        <div className=\"dashboard-item-function\">\r\n          <Button\r\n            className=\"dashboard-item-button\"\r\n            icon={<EditFilled />}\r\n            size=\"small\"\r\n            onClick={showModal}\r\n          />\r\n        </div>\r\n      </div>\r\n      <ModuleUpdateItem\r\n        visible={isModalVisible}\r\n        onCreate={onCreate}\r\n        onCancel={handleCancel}\r\n        formData={initialData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nItem.defaultProps = {\r\n  item: null,\r\n};\r\n\r\nItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    image: PropTypes.string,\r\n    price: PropTypes.number,\r\n    is_active: PropTypes.bool,\r\n  }),\r\n  updateItem: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateItem: UpdateItem,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Item);\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Modal, Input, Select } from 'antd';\r\n// dataSources\r\nimport { isActive } from '../../../../dataSources/isActive';\r\n\r\nconst ModuleUpdateMenu = ({\r\n  visible,\r\n  onCreate,\r\n  onCancel,\r\n  formData,\r\n}) => {\r\n  const formRef = useRef(null);\r\n  const [form] = Form.useForm();\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Update menu\"\r\n      okText=\"Update\"\r\n      cancelText=\"Cancel\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            onCreate(values);\r\n            form.resetFields();\r\n          })\r\n          .catch(() => {});\r\n      }}\r\n    >\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        ref={formRef}\r\n        initialValues={formData}\r\n      >\r\n        <Form.Item label=\"Menu name\" name=\"name\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"is_active\" label=\"Menu status\">\r\n          <Select placeholder=\"Menu status\">\r\n            {isActive.map((option) => (\r\n              <Select.Option value={option.value} key={option.id}>\r\n                {option.label}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModuleUpdateMenu.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  onCreate: PropTypes.func.isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n  formData: PropTypes.shape({}).isRequired,\r\n};\r\n\r\nexport default ModuleUpdateMenu;\r\n","/* eslint-disable react/jsx-wrap-multilines */\r\n// libs\r\nimport React, { useState } from 'react';\r\nimport { Card, Button, Badge } from 'antd';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n// components\r\nimport Item from '../Item';\r\nimport { UpdateMenu } from '../../../../actions/storecontrol';\r\nimport ModuleUpdateMenu from '../ModuleUpdateMenu';\r\n\r\nconst MenuItem = ({ menuItems, updateMenu }) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [initialData] = useState({\r\n    name: menuItems.name,\r\n    is_active: menuItems.is_active,\r\n  });\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const onCreate = (values) => {\r\n    let createForm = null;\r\n    if (values.name !== menuItems.name) {\r\n      createForm = { name: values.name };\r\n    }\r\n    if (values.is_active !== menuItems.is_active) {\r\n      createForm = { ...createForm, is_active: values.is_active };\r\n    }\r\n    if (createForm) updateMenu(createForm, menuItems.id);\r\n    setIsModalVisible(false);\r\n  };\r\n  return (\r\n    <div className=\"menu-item-wrapper\">\r\n      <Badge.Ribbon\r\n        text={menuItems.is_active ? 'Avalible' : 'Not Available'}\r\n        color={menuItems.is_active ? 'green' : 'red'}\r\n      >\r\n        <Card\r\n          title={\r\n            <>\r\n              {menuItems.name}\r\n              <Button\r\n                icon={<EditOutlined />}\r\n                className=\"dashboard-menu-card-button\"\r\n                onClick={showModal}\r\n              />\r\n            </>\r\n          }\r\n          className=\"dashboard-menu-item-wrapper\"\r\n        >\r\n          <div className=\"dashboard-menu-item-wrapper-inner\">\r\n            {menuItems?.items.map((item) => (\r\n              <Item key={item.id} item={item} />\r\n            ))}\r\n          </div>\r\n        </Card>\r\n      </Badge.Ribbon>\r\n      <ModuleUpdateMenu\r\n        visible={isModalVisible}\r\n        onCreate={onCreate}\r\n        onCancel={handleCancel}\r\n        formData={initialData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nMenuItem.propTypes = {\r\n  updateMenu: PropTypes.func.isRequired,\r\n  menuItems: PropTypes.shape({\r\n    is_active: PropTypes.bool,\r\n    name: PropTypes.string,\r\n    id: PropTypes.number,\r\n    items: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number,\r\n      }),\r\n    ),\r\n  }).isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateMenu: UpdateMenu,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(MenuItem);\r\n","// libs\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Empty,\r\n  Form,\r\n  Modal,\r\n  Input,\r\n  Space,\r\n  Select,\r\n} from 'antd';\r\nimport { PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\n// components\r\nimport Loading from '../../../../components/Loading';\r\nimport MenuItem from '../../components/MenuItem';\r\n// redux\r\nimport { CreateMenu } from '../../../../actions/storecontrol';\r\n// dataSources\r\nimport { isActive } from '../../../../dataSources/isActive';\r\n\r\nconst CollectionCreateForm = ({ visible, onCreate, onCancel }) => {\r\n  const formRef = useRef(null);\r\n  const [formControl] = Form.useForm();\r\n  useEffect(() => {}, [visible]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Create menu\"\r\n      okText=\"Create\"\r\n      cancelText=\"Cancel\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        formControl\r\n          .validateFields()\r\n          .then((values) => {\r\n            onCreate(values);\r\n            formControl.resetFields();\r\n          })\r\n          .catch(() => {});\r\n      }}\r\n    >\r\n      <Form\r\n        form={formControl}\r\n        layout=\"vertical\"\r\n        ref={formRef}\r\n        name=\"create-menu-item\"\r\n      >\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Menu name\"\r\n          rules={[{ required: true, message: 'Name' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"is_active\" label=\"Menu status\">\r\n          <Select placeholder=\"Menu status\">\r\n            {isActive.map((option) => (\r\n              <Select.Option value={option.value} key={option.id}>\r\n                {option.label}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <p>Menus Item</p>\r\n        <Form.List name=\"items\" label=\"Menu items\">\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              {fields.map(({ key, name, fieldKey, ...restField }) => (\r\n                <Space\r\n                  key={key}\r\n                  style={{ display: 'flex', marginBottom: 8 }}\r\n                  align=\"baseline\"\r\n                >\r\n                  <Form.Item\r\n                    {...restField}\r\n                    name={[name, 'name']}\r\n                    fieldKey={[fieldKey, 'name']}\r\n                    rules={[{ required: true, message: 'Name' }]}\r\n                  >\r\n                    <Input placeholder=\"Name\" />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    {...restField}\r\n                    name={[name, 'price']}\r\n                    fieldKey={[fieldKey, 'price']}\r\n                    rules={[{ required: true, message: 'Price' }]}\r\n                  >\r\n                    <Input placeholder=\"Price\" />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name={[name, 'is_active']}\r\n                    fieldKey={[fieldKey, 'is_active']}\r\n                  >\r\n                    <Select placeholder=\"Item status\">\r\n                      <Select.Option value>Available</Select.Option>\r\n                      <Select.Option>Not Available</Select.Option>\r\n                    </Select>\r\n                  </Form.Item>\r\n                  <MinusCircleOutlined onClick={() => remove(name)} />\r\n                </Space>\r\n              ))}\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  onClick={() => add()}\r\n                  block\r\n                  icon={<PlusOutlined />}\r\n                >\r\n                  Add field\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nCollectionCreateForm.defaultProps = {\r\n  formData: null,\r\n};\r\n\r\nCollectionCreateForm.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  onCreate: PropTypes.func.isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n  formData: PropTypes.shape({}),\r\n};\r\n\r\nconst StoreDashboardMenus = ({ isLoading, menus, createMenu }) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const onCreate = (values) => {\r\n    const createForm = new FormData();\r\n    if (values?.items) createForm.append('items', values.items);\r\n    if (values.name) createForm.append('name', values.name);\r\n    if (values?.is_active) {\r\n      createForm.append('is_active', values.is_active);\r\n    }\r\n    setIsModalVisible(false);\r\n    createMenu(values);\r\n  };\r\n\r\n  useEffect(() => {}, [menus]);\r\n\r\n  return (\r\n    <div className=\"dashboard-tab-wrapper\">\r\n      <Loading isLoading={isLoading} isError={false}>\r\n        <div className=\"dashboard-tab-wrapper-inner\">\r\n          <div className=\"dashboard-menus-wrapper\">\r\n            <div className=\"dashboard-menus-wrapper-inner\">\r\n              <div className=\"dashboard-menus-create-wrapper\">\r\n                <Button\r\n                  icon={<PlusOutlined />}\r\n                  className=\"dashboard-menus-create-button\"\r\n                  onClick={showModal}\r\n                >\r\n                  Create menu\r\n                </Button>\r\n              </div>\r\n              <div className=\"dashboard-menus-body\">\r\n                {menus.length === 0 && (\r\n                  <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n                {menus.map((menu) => (\r\n                  <MenuItem key={menu.id} menuItems={menu} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CollectionCreateForm\r\n            visible={isModalVisible}\r\n            onCreate={onCreate}\r\n            onCancel={handleCancel}\r\n          />\r\n        </div>\r\n      </Loading>\r\n    </div>\r\n  );\r\n};\r\n\r\nStoreDashboardMenus.defaultProps = {\r\n  menus: null,\r\n};\r\n\r\nStoreDashboardMenus.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  menus: PropTypes.arrayOf(PropTypes.shape({})),\r\n  createMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoading: state.storecontrol.isLoadingMenus,\r\n  isError: state.storecontrol.isError,\r\n  menus: state.storecontrol.storeMenus,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  createMenu: CreateMenu,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(StoreDashboardMenus);\r\n","// libs\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Tabs } from 'antd';\r\nimport { connect } from 'react-redux';\r\n// components\r\nimport StoreDashboardInfo from './mains/StoreDashboardInfo';\r\nimport StoreDashboardOrder from './mains/StoreDashboardOrder';\r\nimport StoreDashboardMenus from './mains/StoreDashboardMenus';\r\nimport Loading from '../../components/Loading';\r\n// redux\r\nimport { LoadEmployee } from '../../actions/employee';\r\n\r\nconst StoreDashboard = ({\r\n  isAuth,\r\n  user,\r\n  loadEmployee,\r\n  employeeStore,\r\n  isLoading,\r\n  isError,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!isAuth) {\r\n      history.push('/account/login');\r\n    } else if (user && user.account_role !== 'employee') {\r\n      history.push('/');\r\n    } else if (!employeeStore?.id) loadEmployee();\r\n  }, [user, isAuth]);\r\n\r\n  useEffect(() => {\r\n    if (isError) history.push('/somethingwrong');\r\n  }, [isLoading, isError]);\r\n\r\n  return (\r\n    <div className=\"store-dashboard-wrapper\">\r\n      <Loading isLoading={isLoading} isError={!employeeStore}>\r\n        <div className=\"store-dashboard-wrapper-inner\">\r\n          <Tabs\r\n            defaultActiveKey=\"1\"\r\n            type=\"card\"\r\n            className=\"store-dashboard-tabs\"\r\n          >\r\n            <Tabs.TabPane tab=\"Thông tin cửa hàng\" key=\"1\">\r\n              <StoreDashboardInfo />\r\n            </Tabs.TabPane>\r\n            <Tabs.TabPane tab=\"Thực đơn\" key=\"2\">\r\n              <StoreDashboardMenus />\r\n            </Tabs.TabPane>\r\n            <Tabs.TabPane tab=\"Đơn hàng\" key=\"3\">\r\n              <StoreDashboardOrder />\r\n            </Tabs.TabPane>\r\n          </Tabs>\r\n        </div>\r\n      </Loading>\r\n    </div>\r\n  );\r\n};\r\n\r\nStoreDashboard.defaultProps = {\r\n  user: null,\r\n  employeeStore: null,\r\n};\r\n\r\nStoreDashboard.propTypes = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  isError: PropTypes.bool.isRequired,\r\n  user: PropTypes.shape({\r\n    account_role: PropTypes.string,\r\n  }),\r\n  employeeStore: PropTypes.shape({\r\n    id: PropTypes.number,\r\n  }),\r\n  loadEmployee: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadEmployee: LoadEmployee,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuthenticated,\r\n  employeeStore: state.employee.employeeStore,\r\n  user: state.auth.user,\r\n  isLoading: state.employee.isLoading,\r\n  isError: state.employee.isError,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(StoreDashboard);\r\n","// libs\r\n// components\r\nimport Login from '../pages/Login';\r\nimport Register from '../pages/Register';\r\nimport LandingPage from '../pages/LandingPage';\r\nimport Home from '../pages/Home';\r\nimport Store from '../pages/Store';\r\nimport UserProfile from '../pages/UserProfile';\r\nimport EmployeeWorkspace from '../pages/EmployeeWorkspace';\r\nimport StoreDashboard from '../pages/StoreDashboard';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/account/login',\r\n    component: Login,\r\n  },\r\n  {\r\n    path: '/account/register',\r\n    component: Register,\r\n  },\r\n  {\r\n    path: '/about',\r\n    component: LandingPage,\r\n  },\r\n  {\r\n    path: '/',\r\n    component: Home,\r\n  },\r\n  {\r\n    path: '/store/:id',\r\n    component: Store,\r\n  },\r\n  {\r\n    path: '/account/profile',\r\n    component: UserProfile,\r\n  },\r\n  {\r\n    path: '/employee',\r\n    component: EmployeeWorkspace,\r\n  },\r\n  {\r\n    path: '/employee/store',\r\n    component: StoreDashboard,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import * as actionType from '../actions/type';\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  authTokens: localStorage.getItem('authTokens'),\r\n  user: {},\r\n  isLoadingAccount: false,\r\n};\r\n\r\nconst auth = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionType.ACCOUNT_LOGIN_SUCCESS:\r\n      localStorage.setItem('authTokens', JSON.stringify(payload));\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        authTokens: payload,\r\n        isLoadingAccount: true,\r\n      };\r\n    case actionType.ACCOUNT_AUTHENTICATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n      };\r\n    case actionType.ACCOUNT_LOAD_PROFILE:\r\n      return {\r\n        ...state,\r\n        isLoadingAccount: true,\r\n      };\r\n    case actionType.ACCOUNT_LOAD_PROFILE_SUCCESS:\r\n    case actionType.ACCOUNT_UPDATE_SUCCESS:\r\n      // eslint-disable-next-line no-case-declarations\r\n      const newUser = { ...state.user, ...payload.user };\r\n      return {\r\n        ...state,\r\n        isLoadingAccount: false,\r\n        user: newUser,\r\n      };\r\n    case actionType.ACCOUNT_LOGIN_FAIL:\r\n    case actionType.ACCOUNT_LOGOUT:\r\n    case actionType.ACCOUNT_AUTHENTICATION_FAILED:\r\n      localStorage.removeItem('authTokens');\r\n      return {\r\n        ...state,\r\n        isLoadingAccount: false,\r\n        isAuthenticated: false,\r\n        authTokens: null,\r\n        user: {},\r\n      };\r\n    case actionType.ACCOUNT_UPDATE_FAILED:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default auth;\r\n","import * as actionType from '../actions/type';\r\n\r\nconst initialState = {\r\n  isLoading: true,\r\n  isError: false,\r\n  storeList: [],\r\n};\r\n\r\nconst storeview = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionType.STORE_VIEW_LOAD:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        storeList: [],\r\n      };\r\n    case actionType.STORE_VIEW_LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        storeList: payload,\r\n        isError: false,\r\n      };\r\n    case actionType.STORE_VIEW_LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        storeList: [],\r\n        isError: true,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default storeview;\r\n","import * as actionType from '../actions/type';\r\n\r\nconst initialState = {\r\n  isLoading: true,\r\n  isError: false,\r\n  storeDataList: [],\r\n};\r\n\r\nconst storedata = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionType.STORE_LOAD:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        storeDataList: [],\r\n      };\r\n    case actionType.STORE_LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        storeDataList: payload.stores,\r\n        isError: false,\r\n      };\r\n    case actionType.STORE_LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        storeDataList: [],\r\n        isError: true,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default storedata;\r\n","import * as actionType from '../actions/type';\r\n\r\nconst initialState = {\r\n  storeId: {},\r\n  menu: [],\r\n  cart: [],\r\n  isLoading: false,\r\n  isError: false,\r\n};\r\n\r\nconst storeid = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionType.STORE_ID_LOAD:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case actionType.STORE_ID_LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        storeId: payload.store,\r\n        menu: payload.store.menus,\r\n        isError: false,\r\n        cart: [],\r\n      };\r\n    case actionType.STORE_ID_LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        storeId: {},\r\n        menus: [],\r\n        cart: [],\r\n        isError: true,\r\n      };\r\n    case actionType.STORE_ID_ADD_CART: {\r\n      const newItem = payload;\r\n      const containItem = state.cart.some(\r\n        (cart) => cart.item.id === newItem.id,\r\n      );\r\n      let newCart;\r\n      if (containItem) {\r\n        newCart = state.cart.map((cartItem) => {\r\n          let cartItemAmount = cartItem.amount;\r\n          if (cartItem.item.id === newItem.id) {\r\n            cartItemAmount += 1;\r\n          }\r\n          return {\r\n            ...cartItem,\r\n            amount: cartItemAmount,\r\n          };\r\n        });\r\n      } else {\r\n        newCart = [...state.cart, { amount: 1, item: newItem }];\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        cart: newCart,\r\n      };\r\n    }\r\n    case actionType.STORE_ID_REMOVE_CART: {\r\n      const newItem = payload;\r\n      const reduceCart = state.cart.map((cartItem) => {\r\n        let cartItemAmount = cartItem.amount;\r\n        if (cartItem.item.id === newItem.id) {\r\n          cartItemAmount -= 1;\r\n        }\r\n        return {\r\n          ...cartItem,\r\n          amount: cartItemAmount,\r\n        };\r\n      });\r\n      const newCart = reduceCart.filter(\r\n        (cardItem) => cardItem.amount > 0,\r\n      );\r\n      return {\r\n        ...state,\r\n        cart: newCart,\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default storeid;\r\n","import * as actionType from '../actions/type';\r\n\r\nconst initialState = {\r\n  employee: {},\r\n  customer: {},\r\n};\r\n\r\nconst role = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionType.ROLE_LOAD_EMPLOYEE:\r\n      return {\r\n        ...state,\r\n        employee: payload,\r\n      };\r\n    case actionType.ROLE_LOAD_CUSTOMER:\r\n      return {\r\n        ...state,\r\n        customer: payload,\r\n      };\r\n    case actionType.ROLE_CLEAR_ALL:\r\n      return {\r\n        ...state,\r\n        customer: {},\r\n        employee: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default role;\r\n","import * as actionType from '../actions/type';\r\n\r\nconst initialState = {\r\n  employeeInfo: {},\r\n  employeeStore: {},\r\n  isLoading: true,\r\n  isError: false,\r\n};\r\n\r\nconst employee = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionType.EMPLOYEE_LOAD_PROFILE:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case actionType.EMPLOYEE_LOAD_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        employeeInfo: payload?.employee,\r\n        employeeStore: payload?.employee?.store,\r\n      };\r\n    case actionType.EMPLOYEE_CREATE_STORE_FAILED:\r\n    case actionType.EMPLOYEE_LOAD_PROFILE_FAILED:\r\n      return {\r\n        ...state,\r\n        isError: true,\r\n        isLoading: false,\r\n        employeeInfo: {},\r\n        employeeStore: {},\r\n      };\r\n    case actionType.EMPLOYEE_CREATE_STORE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        employeeStore: payload.store,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default employee;\r\n","import * as actionType from '../actions/type';\r\n\r\nconst initialState = {\r\n  isLoadingStore: true,\r\n  isLoadingMenus: true,\r\n  isLoadingOrder: true,\r\n  isError: false,\r\n  storeInfo: {},\r\n  storeMenus: {},\r\n  storeOrder: [],\r\n};\r\n\r\nconst storecontrol = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionType.STORE_CONTROL_UPDATE_STORE:\r\n    case actionType.STORE_CONTROL_LOAD_STORE:\r\n      return {\r\n        ...state,\r\n        isError: false,\r\n        isLoadingStore: true,\r\n      };\r\n    case actionType.STORE_CONTROL_CREATE_MENU:\r\n    case actionType.STORE_CONTROL_LOAD_MENU:\r\n      return {\r\n        ...state,\r\n        isError: false,\r\n        isLoadingMenus: true,\r\n      };\r\n    case actionType.STORE_CONTROL_LOAD_ORDER:\r\n      return {\r\n        ...state,\r\n        isError: false,\r\n        isLoadingOrder: true,\r\n      };\r\n    case actionType.STORE_CONTROL_LOAD_STORE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoadingStore: false,\r\n        isLoadingMenus: false,\r\n        isError: false,\r\n        storeInfo: payload.store,\r\n        storeMenus: payload.store.menus,\r\n      };\r\n    case actionType.STORE_CONTROL_LOAD_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoadingOrder: false,\r\n        isError: false,\r\n        storeOrder: payload.orders,\r\n      };\r\n    case actionType.STORE_CONTROL_UPDATE_STORE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoadingStore: false,\r\n        isError: false,\r\n        storeInfo: payload.store,\r\n      };\r\n    case actionType.STORE_CONTROL_CREATE_MENU_SUCCESS: {\r\n      const newMenu = [...state.storeMenus, payload.menu];\r\n      return {\r\n        ...state,\r\n        storeMenus: newMenu,\r\n        isLoadingMenus: false,\r\n        isError: false,\r\n      };\r\n    }\r\n    case actionType.STORE_CONTROL_UPDATE_MENU_SUCCESS: {\r\n      const updateMenu = payload.menu;\r\n      const newStoreMenu = state.storeMenus.map((menu) => {\r\n        let newMenu;\r\n        if (menu.id === updateMenu.id) {\r\n          newMenu = { ...updateMenu };\r\n        } else newMenu = { ...menu };\r\n        return newMenu;\r\n      });\r\n      return {\r\n        ...state,\r\n        storeMenus: newStoreMenu,\r\n      };\r\n    }\r\n    case actionType.STORE_CONTROL_UPDATE_ITEM_SUCCESS: {\r\n      const updateItem = payload.item;\r\n      const newStoreMenu = state.storeMenus.map((menu) => {\r\n        let newMenu;\r\n        if (menu.id === updateItem.menu) {\r\n          const newMenuItems = menu.items.map((item) => {\r\n            let newItem;\r\n            if (item.id === updateItem.id) {\r\n              newItem = { ...updateItem };\r\n            } else newItem = { ...item };\r\n            return newItem;\r\n          });\r\n          newMenu = {\r\n            ...menu,\r\n            items: newMenuItems,\r\n          };\r\n        } else newMenu = { ...menu };\r\n        return newMenu;\r\n      });\r\n      return {\r\n        ...state,\r\n        storeMenus: newStoreMenu,\r\n      };\r\n    }\r\n    case actionType.STORE_CONTROL_UPDATE_ITEM_FAILED:\r\n    case actionType.STORE_CONTROL_UPDATE_STORE_FAILED:\r\n    case actionType.STORE_CONTROL_CREATE_MENU_FAILED:\r\n    case actionType.STORE_CONTROL_UPDATE_MENU_FAILED:\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionType.STORE_CONTROL_LOAD_MENU_FAILED:\r\n    case actionType.STORE_CONTROL_LOAD_ORDER_FAILED:\r\n    case actionType.STORE_CONTROL_LOAD_STORE_FAILED:\r\n      return {\r\n        ...state,\r\n        isError: true,\r\n        storeInfo: {},\r\n        storeMenus: {},\r\n        storeOrder: [],\r\n      };\r\n    case actionType.STORE_CONTROLL_CLEAR_ALL:\r\n      return {\r\n        isLoadingStore: true,\r\n        isLoadingMenus: true,\r\n        isLoadingOrder: true,\r\n        isError: false,\r\n        storeInfo: {},\r\n        storeMenus: {},\r\n        storeOrder: [],\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default storecontrol;\r\n","// libs\r\nimport { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport storeview from './storeview';\r\nimport storedata from './storedata';\r\nimport storeid from './storeid';\r\nimport role from './role';\r\nimport employee from './employee';\r\nimport storecontrol from './storecontrol';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  storeview,\r\n  storedata,\r\n  storeid,\r\n  role,\r\n  employee,\r\n  storecontrol,\r\n});\r\n","// libs\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n// style\r\nimport './styles/main.scss';\r\nimport 'antd/dist/antd.css';\r\n// components\r\nimport Layout from './HOC/Layout';\r\nimport routes from './Config/routes';\r\n// store\r\nimport store from './store';\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Layout>\r\n          <Switch>\r\n            {routes.map((route) => (\r\n              <Route\r\n                key={route.path}\r\n                path={route.path}\r\n                component={route.component}\r\n                exact\r\n              />\r\n            ))}\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n    </div>\r\n  </Provider>\r\n);\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}